//   Ordt 190524.01 autogenerated file 
//   Input: ./node_reg.rdl
//   Parms: ./node_reg.params
//   Date: Sun Dec 06 17:52:46 EST 2020
//

`timescale 1 ns / 100 ps
//
//---------- module top_test_leaf_bfm
//
module top_test_leaf_bfm
(
  address,
  wr_data,
  wr_enable,
  rd_compare,
  rd_data,
  trans_type,
  size,
  leaf_go,
  CLK,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,

  active,
  done,
  leaf_dec_addr,
  leaf_dec_wr_data,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width );

  //------- inputs
  input     [15:0] address;
  input     [63:0] wr_data;
  input    wr_enable;
  input    rd_compare;
  input     [63:0] rd_data;
  input     [1:0] trans_type;
  input     [3:0] size;
  input    leaf_go;
  input    CLK;
  input     [63:0] dec_leaf_rd_data;
  input    dec_leaf_ack;
  input    dec_leaf_nack;
  input    dec_leaf_accept;
  input    dec_leaf_reject;
  input    dec_leaf_retry_atomic;
  input     [2:0] dec_leaf_data_width;

  //------- outputs
  output    active;
  output    done;
  output     [15:0] leaf_dec_addr;
  output     [63:0] leaf_dec_wr_data;
  output    leaf_dec_valid;
  output    leaf_dec_wr_dvld;
  output     [1:0] leaf_dec_cycle;
  output     [2:0] leaf_dec_wr_width;


  //------- reg defines
  reg  active;
  reg  done;
  reg   [15:0] leaf_dec_addr;
  reg   [63:0] leaf_dec_wr_data;
  reg  leaf_dec_valid;
  reg  leaf_dec_wr_dvld;
  reg   [1:0] leaf_dec_cycle;
  reg   [2:0] leaf_dec_wr_width;
  reg   [4:0] trans_size;
  
  initial begin
    active = 0;
    done = 0;
    leaf_dec_addr = 0;
    leaf_dec_wr_data = 0;
    leaf_dec_valid = 0;
    leaf_dec_wr_dvld = 0;
    leaf_dec_cycle = 0;
    leaf_dec_wr_width = 0;
  end
  
  always @(posedge leaf_go) begin
    @(posedge CLK);
      #1 active = 1'b1;
      leaf_dec_addr = address;
      leaf_dec_wr_data = wr_data;
      leaf_dec_valid = 1'b1;
      leaf_dec_wr_dvld = 1'b0;
      leaf_dec_cycle = trans_type;
      trans_size = {1'b0, size} + 5'b1;
      if (trans_type[1] == 1'b0) begin
        leaf_dec_wr_width = size [2:0] ;
        $display("%0d: initiating %d word write to address %x (data=%x)...", $time, trans_size, address, wr_data);
      end
      else begin
        leaf_dec_wr_width = 0;
        $display("%0d: initiating %d word read to address %x...", $time, trans_size, address);
      end
  
    @(posedge CLK);
      leaf_dec_valid = 1'b0;
      leaf_dec_wr_dvld <= ~trans_type[1];
      while (~dec_leaf_reject & ~dec_leaf_ack & ~dec_leaf_nack) begin
         @(posedge CLK);
         leaf_dec_wr_dvld = 1'b0;
      end
  
    leaf_dec_valid = 1'b0;
    leaf_dec_wr_dvld = 1'b0;
    done = 1'b1;
    $display("  accept = %d", dec_leaf_accept);
    $display("  reject = %d", dec_leaf_reject);
    $display("  ack = %d", dec_leaf_ack);
    $display("  nack = %d", dec_leaf_nack);
    $display("  return size = %x", dec_leaf_data_width);
    $display("  retry = %d", dec_leaf_retry_atomic);
    if (trans_type[1] == 1'b1) begin
      $display("  read data = %x", dec_leaf_rd_data);
      if (rd_compare) begin
        if (dec_leaf_rd_data !== rd_data) $display("  read compare FAILED - expected %x", rd_data);
        else $display("  read compare OK - expected %x", rd_data);
      end
    end
    #1 active = 1'b0;
    #1 done = 1'b0;
  end
  
endmodule

//
//---------- module top_test
//
module top_test ( );
  //------- wire defines
  wire   [63:0] leaf_dec_wr_data;
  wire   [15:0] leaf_dec_addr;
  wire  leaf_dec_block_sel;
  wire  leaf_dec_valid;
  wire  leaf_dec_wr_dvld;
  wire   [1:0] leaf_dec_cycle;
  wire   [2:0] leaf_dec_wr_width;
  wire   [63:0] dec_leaf_rd_data;
  wire  dec_leaf_ack;
  wire  dec_leaf_nack;
  wire  dec_leaf_accept;
  wire  dec_leaf_reject;
  wire  dec_leaf_retry_atomic;
  wire   [2:0] dec_leaf_data_width;
  wire  l2h_node_reg_type_node_condor_system_r;
  wire   [15:0] l2h_node_reg_type_node_absolute_node_number_r;
  wire   [4:0] l2h_node_reg_num_nodes_log2_num_nodes_r;
  wire   [1:0] l2h_node_reg_msp_size_msp_size_r;
  wire   [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar2_r;
  wire   [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar0_r;
  wire  l2h_node_reg_avl_mon_avalon_monitor_bypass2_r;
  wire  l2h_node_reg_avl_mon_avalon_monitor_bypass0_r;
  wire  l2h_node_reg_avl_mon_enable_pcie_read_r;
  wire   [63:0] l2h_node_reg_rt_ctr_real_time_counter_r;
  wire  l2h_node_reg_ign_pa_ignore_phy_addr_r;
  wire  l2h_node_reg_dis_ls_disable_local_spawn_r;
  wire  l2h_node_reg_cdt1_overwrite_credits_r;
  wire   [15:0] l2h_node_reg_cdt1_node_credits_r;
  wire  l2h_node_reg_cdt2_track_migration_r;
  wire  l2h_node_reg_cdt2_enable_credits_r;
  wire  l2h_node_reg_hilo_dsp_hi_r;
  wire  l2h_node_reg_hilo_dsp_lo_r;
  wire  l2h_node_reg_rst_reset_srio_control_r;
  wire   [5:0] l2h_node_reg_rst_reset_srio_r;
  wire   [7:0] l2h_node_reg_rst_reset_emif_r;
  wire  l2h_node_reg_rst_reset_me_r;
  wire   [3:0] l2h_node_reg_rst_reset_msp_r;
  wire   [3:0] l2h_node_reg_rst_reset_cluster_r;
  wire  active;
  wire  done;
  
  //------- reg defines
  reg  CLK;
  reg  CLK_div2;
  reg  CLK_div4;
  reg  clk;
  reg  reset;
  reg   [3:0] h2l_node_reg_clst_msp_num_clusters_w;
  reg   [3:0] h2l_node_reg_clst_msp_num_msps_w;
  reg   [3:0] h2l_node_reg_cores_cluster_cores_per_cluster_w;
  reg  h2l_node_reg_dbg_mon_ncr_debug_enabled_w;
  reg  h2l_node_reg_dbg_mon_mfe_debug_enabled_w;
  reg   [63:0] h2l_node_reg_rt_ctr_real_time_counter_w;
  reg   [15:0] h2l_node_reg_cdt1_node_credits_w;
  reg   [15:0] h2l_node_reg_cdt2_node_threads_w;
  reg   [31:0] h2l_node_reg_amm_0_amm_0_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_0_amm_0_read_req_w;
  reg   [31:0] h2l_node_reg_amm_1_amm_1_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_1_amm_1_read_req_w;
  reg   [31:0] h2l_node_reg_amm_2_amm_2_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_2_amm_2_read_req_w;
  reg   [31:0] h2l_node_reg_amm_3_amm_3_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_3_amm_3_read_req_w;
  reg   [31:0] h2l_node_reg_amm_4_amm_4_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_4_amm_4_read_req_w;
  reg   [31:0] h2l_node_reg_amm_5_amm_5_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_5_amm_5_read_req_w;
  reg   [31:0] h2l_node_reg_amm_6_amm_6_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_6_amm_6_read_req_w;
  reg   [31:0] h2l_node_reg_amm_7_amm_7_read_rsp_w;
  reg   [31:0] h2l_node_reg_amm_7_amm_7_read_req_w;
  reg   [31:0] h2l_node_reg_avs_sc_avs_sc_read_rsp_w;
  reg   [31:0] h2l_node_reg_avs_sc_avs_sc_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w;
  reg   [31:0] h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w;
  reg   [31:0] h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w;
  reg   [31:0] h2l_node_reg_me_reg_avs_me_regif_read_rsp_w;
  reg   [31:0] h2l_node_reg_me_reg_avs_me_regif_read_req_w;
  reg   [31:0] h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w;
  reg   [31:0] h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w;
  reg   [7:0] h2l_node_reg_cal_fail_all_mem_cal_fail_w;
  reg   [7:0] h2l_node_reg_cal_fail_all_mem_cal_success_w;
  reg   [16:0] h2l_node_reg_bar0_max_wait_delay_bar0_w;
  reg   [5:0] h2l_node_reg_bar2_sc_bar2_write_burst_set_w;
  reg   [5:0] h2l_node_reg_bar2_sc_bar2_read_burst_set_w;
  reg   [16:0] h2l_node_reg_bar2_max_wait_delay_bar2_w;
  reg   [15:0] address;
  reg   [63:0] wr_data;
  reg  wr_enable;
  reg  rd_compare;
  reg   [63:0] rd_data;
  reg   [1:0] trans_type;
  reg   [3:0] size;
  reg  leaf_go;
  
  always @(*)
     clk = CLK;
  
  initial
    begin
    $display(" << Starting the Simulation >>");
    $dumpfile("test.vcd");
    $dumpvars(0,top_test);
    #5000
    $dumpoff;
    $finish;
  end
  
  initial
    begin
    CLK = 1'b0; // at time 0
    CLK_div2 = 1'b0;
    CLK_div4 = 1'b0;
    reset = 0; // toggle reset
    #15 reset = 1'b1;
    $display(" %0d: Applying reset...", $time);
    #30 reset = 1'b0;
    $display(" %0d: Releasing reset...", $time);
  end
  
  always
     #5 CLK = ~CLK;
  
  always @ (posedge CLK)
     CLK_div2 = ~CLK_div2; 
  
  always @ (posedge CLK_div2)
     CLK_div4 = ~CLK_div4; 
  
  // 32b write task
  task write32;
    input  [15:0] in_address;
    input  [31:0] in_wr_data;
    input in_wr_enable;
    output  [15:0] address;
    output  [63:0] wr_data;
    output wr_enable;
    output rd_compare;
    output  [63:0] rd_data;
    output [1:0] trans_type;
    output [3:0] size;
    output leaf_go;
    begin
      address = #1 in_address;
      wr_data = 0;
      wr_data [31:0] = in_wr_data;
      wr_enable = in_wr_enable;
      rd_compare = 0;
      rd_data = 0;
      trans_type = 0;
      size = 4'd0;
      leaf_go = 1'b1;
    end
  endtask
  
  // 32b read task
  task read32;
    input  [15:0] in_address;
    input in_rd_compare;
    input  [31:0] in_rd_data;
    output  [15:0] address;
    output  [63:0] wr_data;
    output wr_enable;
    output rd_compare;
    output  [63:0] rd_data;
    output [1:0] trans_type;
    output [3:0] size;
    output leaf_go;
    begin
      address = #1 in_address;
      wr_data = 0;
      wr_enable = 0;
      rd_compare = in_rd_compare;
      rd_data = 0;
      rd_data [31:0] = in_rd_data;
      trans_type = 2'b10;
      size = 4'd0;
      leaf_go = 1'b1;
    end
  endtask
  
  // 64b write task
  task write64;
    input  [15:0] in_address;
    input  [63:0] in_wr_data;
    input in_wr_enable;
    output  [15:0] address;
    output  [63:0] wr_data;
    output wr_enable;
    output rd_compare;
    output  [63:0] rd_data;
    output [1:0] trans_type;
    output [3:0] size;
    output leaf_go;
    begin
      address = #1 in_address;
      wr_data = 0;
      wr_data [63:0] = in_wr_data;
      wr_enable = in_wr_enable;
      rd_compare = 0;
      rd_data = 0;
      trans_type = 0;
      size = 4'd1;
      leaf_go = 1'b1;
    end
  endtask
  
  // 64b read task
  task read64;
    input  [15:0] in_address;
    input in_rd_compare;
    input  [63:0] in_rd_data;
    output  [15:0] address;
    output  [63:0] wr_data;
    output wr_enable;
    output rd_compare;
    output  [63:0] rd_data;
    output [1:0] trans_type;
    output [3:0] size;
    output leaf_go;
    begin
      address = #1 in_address;
      wr_data = 0;
      wr_enable = 0;
      rd_compare = in_rd_compare;
      rd_data = 0;
      rd_data [63:0] = in_rd_data;
      trans_type = 2'b10;
      size = 4'd1;
      leaf_go = 1'b1;
    end
  endtask
  
  initial
    begin
    CLK = 0;
    CLK_div2 = 0;
    CLK_div4 = 0;
    reset = 0;
    h2l_node_reg_clst_msp_num_clusters_w = 0;
    h2l_node_reg_clst_msp_num_msps_w = 0;
    h2l_node_reg_cores_cluster_cores_per_cluster_w = 0;
    h2l_node_reg_dbg_mon_ncr_debug_enabled_w = 0;
    h2l_node_reg_dbg_mon_mfe_debug_enabled_w = 0;
    h2l_node_reg_rt_ctr_real_time_counter_w = 0;
    h2l_node_reg_cdt1_node_credits_w = 0;
    h2l_node_reg_cdt2_node_threads_w = 0;
    h2l_node_reg_amm_0_amm_0_read_rsp_w = 0;
    h2l_node_reg_amm_0_amm_0_read_req_w = 0;
    h2l_node_reg_amm_1_amm_1_read_rsp_w = 0;
    h2l_node_reg_amm_1_amm_1_read_req_w = 0;
    h2l_node_reg_amm_2_amm_2_read_rsp_w = 0;
    h2l_node_reg_amm_2_amm_2_read_req_w = 0;
    h2l_node_reg_amm_3_amm_3_read_rsp_w = 0;
    h2l_node_reg_amm_3_amm_3_read_req_w = 0;
    h2l_node_reg_amm_4_amm_4_read_rsp_w = 0;
    h2l_node_reg_amm_4_amm_4_read_req_w = 0;
    h2l_node_reg_amm_5_amm_5_read_rsp_w = 0;
    h2l_node_reg_amm_5_amm_5_read_req_w = 0;
    h2l_node_reg_amm_6_amm_6_read_rsp_w = 0;
    h2l_node_reg_amm_6_amm_6_read_req_w = 0;
    h2l_node_reg_amm_7_amm_7_read_rsp_w = 0;
    h2l_node_reg_amm_7_amm_7_read_req_w = 0;
    h2l_node_reg_avs_sc_avs_sc_read_rsp_w = 0;
    h2l_node_reg_avs_sc_avs_sc_read_req_w = 0;
    h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w = 0;
    h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w = 0;
    h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w = 0;
    h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w = 0;
    h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w = 0;
    h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w = 0;
    h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w = 0;
    h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w = 0;
    h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w = 0;
    h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w = 0;
    h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w = 0;
    h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w = 0;
    h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w = 0;
    h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w = 0;
    h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w = 0;
    h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w = 0;
    h2l_node_reg_me_reg_avs_me_regif_read_rsp_w = 0;
    h2l_node_reg_me_reg_avs_me_regif_read_req_w = 0;
    h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w = 0;
    h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w = 0;
    h2l_node_reg_cal_fail_all_mem_cal_fail_w = 0;
    h2l_node_reg_cal_fail_all_mem_cal_success_w = 0;
    h2l_node_reg_bar0_max_wait_delay_bar0_w = 0;
    h2l_node_reg_bar2_sc_bar2_write_burst_set_w = 0;
    h2l_node_reg_bar2_sc_bar2_read_burst_set_w = 0;
    h2l_node_reg_bar2_max_wait_delay_bar2_w = 0;
    address = 0;
    wr_data = 0;
    wr_enable = 0;
    rd_compare = 0;
    rd_data = 0;
    trans_type = 0;
    size = 0;
    leaf_go = 0;
  
    address = 0;
    wr_data = 0;
    wr_enable = 0;
    rd_compare = 0;
    rd_data = 0;
    trans_type = 0;
    size = 0;
    leaf_go = 0;
    repeat(5)
      @(posedge CLK);
  
  write32(40'h0, 32'ha5a5a5a5, 0, address, wr_data, wr_enable, rd_compare, rd_data, trans_type, size, leaf_go);
  @ (posedge done)
     leaf_go = #2 1'b0; 
  
  read32(40'h0, 0, 0, address, wr_data, wr_enable, rd_compare, rd_data, trans_type, size, leaf_go);
  @ (posedge done)
     leaf_go = #2 1'b0; 
  
  end
  
  
  top_pio pio_dut_0 (
    .clk(clk),
    .reset(reset),
    .h2l_node_reg_clst_msp_num_clusters_w(h2l_node_reg_clst_msp_num_clusters_w),
    .h2l_node_reg_clst_msp_num_msps_w(h2l_node_reg_clst_msp_num_msps_w),
    .h2l_node_reg_cores_cluster_cores_per_cluster_w(h2l_node_reg_cores_cluster_cores_per_cluster_w),
    .h2l_node_reg_dbg_mon_ncr_debug_enabled_w(h2l_node_reg_dbg_mon_ncr_debug_enabled_w),
    .h2l_node_reg_dbg_mon_mfe_debug_enabled_w(h2l_node_reg_dbg_mon_mfe_debug_enabled_w),
    .h2l_node_reg_rt_ctr_real_time_counter_w(h2l_node_reg_rt_ctr_real_time_counter_w),
    .h2l_node_reg_cdt1_node_credits_w(h2l_node_reg_cdt1_node_credits_w),
    .h2l_node_reg_cdt2_node_threads_w(h2l_node_reg_cdt2_node_threads_w),
    .h2l_node_reg_amm_0_amm_0_read_rsp_w(h2l_node_reg_amm_0_amm_0_read_rsp_w),
    .h2l_node_reg_amm_0_amm_0_read_req_w(h2l_node_reg_amm_0_amm_0_read_req_w),
    .h2l_node_reg_amm_1_amm_1_read_rsp_w(h2l_node_reg_amm_1_amm_1_read_rsp_w),
    .h2l_node_reg_amm_1_amm_1_read_req_w(h2l_node_reg_amm_1_amm_1_read_req_w),
    .h2l_node_reg_amm_2_amm_2_read_rsp_w(h2l_node_reg_amm_2_amm_2_read_rsp_w),
    .h2l_node_reg_amm_2_amm_2_read_req_w(h2l_node_reg_amm_2_amm_2_read_req_w),
    .h2l_node_reg_amm_3_amm_3_read_rsp_w(h2l_node_reg_amm_3_amm_3_read_rsp_w),
    .h2l_node_reg_amm_3_amm_3_read_req_w(h2l_node_reg_amm_3_amm_3_read_req_w),
    .h2l_node_reg_amm_4_amm_4_read_rsp_w(h2l_node_reg_amm_4_amm_4_read_rsp_w),
    .h2l_node_reg_amm_4_amm_4_read_req_w(h2l_node_reg_amm_4_amm_4_read_req_w),
    .h2l_node_reg_amm_5_amm_5_read_rsp_w(h2l_node_reg_amm_5_amm_5_read_rsp_w),
    .h2l_node_reg_amm_5_amm_5_read_req_w(h2l_node_reg_amm_5_amm_5_read_req_w),
    .h2l_node_reg_amm_6_amm_6_read_rsp_w(h2l_node_reg_amm_6_amm_6_read_rsp_w),
    .h2l_node_reg_amm_6_amm_6_read_req_w(h2l_node_reg_amm_6_amm_6_read_req_w),
    .h2l_node_reg_amm_7_amm_7_read_rsp_w(h2l_node_reg_amm_7_amm_7_read_rsp_w),
    .h2l_node_reg_amm_7_amm_7_read_req_w(h2l_node_reg_amm_7_amm_7_read_req_w),
    .h2l_node_reg_avs_sc_avs_sc_read_rsp_w(h2l_node_reg_avs_sc_avs_sc_read_rsp_w),
    .h2l_node_reg_avs_sc_avs_sc_read_req_w(h2l_node_reg_avs_sc_avs_sc_read_req_w),
    .h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w(h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w),
    .h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w(h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w),
    .h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w(h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w),
    .h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w(h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w),
    .h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w(h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w),
    .h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w(h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w),
    .h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w(h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w),
    .h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w(h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w),
    .h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w(h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w),
    .h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w(h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w),
    .h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w(h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w),
    .h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w(h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w),
    .h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w(h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w),
    .h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w(h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w),
    .h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w(h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w),
    .h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w(h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w),
    .h2l_node_reg_me_reg_avs_me_regif_read_rsp_w(h2l_node_reg_me_reg_avs_me_regif_read_rsp_w),
    .h2l_node_reg_me_reg_avs_me_regif_read_req_w(h2l_node_reg_me_reg_avs_me_regif_read_req_w),
    .h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w(h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w),
    .h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w(h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w),
    .h2l_node_reg_cal_fail_all_mem_cal_fail_w(h2l_node_reg_cal_fail_all_mem_cal_fail_w),
    .h2l_node_reg_cal_fail_all_mem_cal_success_w(h2l_node_reg_cal_fail_all_mem_cal_success_w),
    .h2l_node_reg_bar0_max_wait_delay_bar0_w(h2l_node_reg_bar0_max_wait_delay_bar0_w),
    .h2l_node_reg_bar2_sc_bar2_write_burst_set_w(h2l_node_reg_bar2_sc_bar2_write_burst_set_w),
    .h2l_node_reg_bar2_sc_bar2_read_burst_set_w(h2l_node_reg_bar2_sc_bar2_read_burst_set_w),
    .h2l_node_reg_bar2_max_wait_delay_bar2_w(h2l_node_reg_bar2_max_wait_delay_bar2_w),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_block_sel(leaf_dec_block_sel),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width),
    .l2h_node_reg_type_node_condor_system_r(l2h_node_reg_type_node_condor_system_r),
    .l2h_node_reg_type_node_absolute_node_number_r(l2h_node_reg_type_node_absolute_node_number_r),
    .l2h_node_reg_num_nodes_log2_num_nodes_r(l2h_node_reg_num_nodes_log2_num_nodes_r),
    .l2h_node_reg_msp_size_msp_size_r(l2h_node_reg_msp_size_msp_size_r),
    .l2h_node_reg_avl_mon_avalon_timeout_bar2_r(l2h_node_reg_avl_mon_avalon_timeout_bar2_r),
    .l2h_node_reg_avl_mon_avalon_timeout_bar0_r(l2h_node_reg_avl_mon_avalon_timeout_bar0_r),
    .l2h_node_reg_avl_mon_avalon_monitor_bypass2_r(l2h_node_reg_avl_mon_avalon_monitor_bypass2_r),
    .l2h_node_reg_avl_mon_avalon_monitor_bypass0_r(l2h_node_reg_avl_mon_avalon_monitor_bypass0_r),
    .l2h_node_reg_avl_mon_enable_pcie_read_r(l2h_node_reg_avl_mon_enable_pcie_read_r),
    .l2h_node_reg_rt_ctr_real_time_counter_r(l2h_node_reg_rt_ctr_real_time_counter_r),
    .l2h_node_reg_ign_pa_ignore_phy_addr_r(l2h_node_reg_ign_pa_ignore_phy_addr_r),
    .l2h_node_reg_dis_ls_disable_local_spawn_r(l2h_node_reg_dis_ls_disable_local_spawn_r),
    .l2h_node_reg_cdt1_overwrite_credits_r(l2h_node_reg_cdt1_overwrite_credits_r),
    .l2h_node_reg_cdt1_node_credits_r(l2h_node_reg_cdt1_node_credits_r),
    .l2h_node_reg_cdt2_track_migration_r(l2h_node_reg_cdt2_track_migration_r),
    .l2h_node_reg_cdt2_enable_credits_r(l2h_node_reg_cdt2_enable_credits_r),
    .l2h_node_reg_hilo_dsp_hi_r(l2h_node_reg_hilo_dsp_hi_r),
    .l2h_node_reg_hilo_dsp_lo_r(l2h_node_reg_hilo_dsp_lo_r),
    .l2h_node_reg_rst_reset_srio_control_r(l2h_node_reg_rst_reset_srio_control_r),
    .l2h_node_reg_rst_reset_srio_r(l2h_node_reg_rst_reset_srio_r),
    .l2h_node_reg_rst_reset_emif_r(l2h_node_reg_rst_reset_emif_r),
    .l2h_node_reg_rst_reset_me_r(l2h_node_reg_rst_reset_me_r),
    .l2h_node_reg_rst_reset_msp_r(l2h_node_reg_rst_reset_msp_r),
    .l2h_node_reg_rst_reset_cluster_r(l2h_node_reg_rst_reset_cluster_r),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width) );
    
  top_test_leaf_bfm leaf_bfm (
    .address(address),
    .wr_data(wr_data),
    .wr_enable(wr_enable),
    .rd_compare(rd_compare),
    .rd_data(rd_data),
    .trans_type(trans_type),
    .size(size),
    .leaf_go(leaf_go),
    .CLK(CLK),
    .dec_leaf_rd_data(dec_leaf_rd_data),
    .dec_leaf_ack(dec_leaf_ack),
    .dec_leaf_nack(dec_leaf_nack),
    .dec_leaf_accept(dec_leaf_accept),
    .dec_leaf_reject(dec_leaf_reject),
    .dec_leaf_retry_atomic(dec_leaf_retry_atomic),
    .dec_leaf_data_width(dec_leaf_data_width),
    .active(active),
    .done(done),
    .leaf_dec_addr(leaf_dec_addr),
    .leaf_dec_wr_data(leaf_dec_wr_data),
    .leaf_dec_valid(leaf_dec_valid),
    .leaf_dec_wr_dvld(leaf_dec_wr_dvld),
    .leaf_dec_cycle(leaf_dec_cycle),
    .leaf_dec_wr_width(leaf_dec_wr_width) );
    
endmodule

