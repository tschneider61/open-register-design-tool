//   Ordt 190524.01 autogenerated file 
//   Input: ./node_reg.rdl
//   Parms: ./node_reg.params
//   Date: Sun Dec 06 17:52:46 EST 2020
//

//
//---------- module top_jrdl_logic
//
module top_jrdl_logic
(
  clk,
  reset,
  d2l_node_reg_type_node_w,
  d2l_node_reg_type_node_we,
  d2l_node_reg_type_node_re,
  d2l_node_reg_num_nodes_w,
  d2l_node_reg_num_nodes_we,
  d2l_node_reg_num_nodes_re,
  d2l_node_reg_msp_size_w,
  d2l_node_reg_msp_size_we,
  d2l_node_reg_msp_size_re,
  d2l_node_reg_clst_msp_w,
  d2l_node_reg_clst_msp_we,
  d2l_node_reg_clst_msp_re,
  d2l_node_reg_cores_cluster_w,
  d2l_node_reg_cores_cluster_we,
  d2l_node_reg_cores_cluster_re,
  d2l_node_reg_avl_mon_w,
  d2l_node_reg_avl_mon_we,
  d2l_node_reg_avl_mon_re,
  d2l_node_reg_dbg_mon_w,
  d2l_node_reg_dbg_mon_we,
  d2l_node_reg_dbg_mon_re,
  d2l_node_reg_rt_ctr_w,
  d2l_node_reg_rt_ctr_we,
  d2l_node_reg_rt_ctr_re,
  d2l_node_reg_ign_pa_w,
  d2l_node_reg_ign_pa_we,
  d2l_node_reg_ign_pa_re,
  d2l_node_reg_dis_ls_w,
  d2l_node_reg_dis_ls_we,
  d2l_node_reg_dis_ls_re,
  d2l_node_reg_cdt1_w,
  d2l_node_reg_cdt1_we,
  d2l_node_reg_cdt1_re,
  d2l_node_reg_cdt2_w,
  d2l_node_reg_cdt2_we,
  d2l_node_reg_cdt2_re,
  d2l_node_reg_hilo_w,
  d2l_node_reg_hilo_we,
  d2l_node_reg_hilo_re,
  d2l_node_reg_rst_w,
  d2l_node_reg_rst_we,
  d2l_node_reg_rst_re,
  d2l_node_reg_amm_0_w,
  d2l_node_reg_amm_0_we,
  d2l_node_reg_amm_0_re,
  d2l_node_reg_amm_1_w,
  d2l_node_reg_amm_1_we,
  d2l_node_reg_amm_1_re,
  d2l_node_reg_amm_2_w,
  d2l_node_reg_amm_2_we,
  d2l_node_reg_amm_2_re,
  d2l_node_reg_amm_3_w,
  d2l_node_reg_amm_3_we,
  d2l_node_reg_amm_3_re,
  d2l_node_reg_amm_4_w,
  d2l_node_reg_amm_4_we,
  d2l_node_reg_amm_4_re,
  d2l_node_reg_amm_5_w,
  d2l_node_reg_amm_5_we,
  d2l_node_reg_amm_5_re,
  d2l_node_reg_amm_6_w,
  d2l_node_reg_amm_6_we,
  d2l_node_reg_amm_6_re,
  d2l_node_reg_amm_7_w,
  d2l_node_reg_amm_7_we,
  d2l_node_reg_amm_7_re,
  d2l_node_reg_avs_sc_w,
  d2l_node_reg_avs_sc_we,
  d2l_node_reg_avs_sc_re,
  d2l_node_reg_ndlt_0_w,
  d2l_node_reg_ndlt_0_we,
  d2l_node_reg_ndlt_0_re,
  d2l_node_reg_ndlt_1_w,
  d2l_node_reg_ndlt_1_we,
  d2l_node_reg_ndlt_1_re,
  d2l_node_reg_ndlt_2_w,
  d2l_node_reg_ndlt_2_we,
  d2l_node_reg_ndlt_2_re,
  d2l_node_reg_ndlt_3_w,
  d2l_node_reg_ndlt_3_we,
  d2l_node_reg_ndlt_3_re,
  d2l_node_reg_ndlt_4_w,
  d2l_node_reg_ndlt_4_we,
  d2l_node_reg_ndlt_4_re,
  d2l_node_reg_ndlt_5_w,
  d2l_node_reg_ndlt_5_we,
  d2l_node_reg_ndlt_5_re,
  d2l_node_reg_ndlt_6_w,
  d2l_node_reg_ndlt_6_we,
  d2l_node_reg_ndlt_6_re,
  d2l_node_reg_ndlt_7_w,
  d2l_node_reg_ndlt_7_we,
  d2l_node_reg_ndlt_7_re,
  d2l_node_reg_me_reg_w,
  d2l_node_reg_me_reg_we,
  d2l_node_reg_me_reg_re,
  d2l_node_reg_ncr_reg_w,
  d2l_node_reg_ncr_reg_we,
  d2l_node_reg_ncr_reg_re,
  d2l_node_reg_cal_fail_w,
  d2l_node_reg_cal_fail_we,
  d2l_node_reg_cal_fail_re,
  d2l_node_reg_bar0_w,
  d2l_node_reg_bar0_we,
  d2l_node_reg_bar0_re,
  d2l_node_reg_bar2_w,
  d2l_node_reg_bar2_we,
  d2l_node_reg_bar2_re,
  h2l_node_reg_clst_msp_num_clusters_w,
  h2l_node_reg_clst_msp_num_msps_w,
  h2l_node_reg_cores_cluster_cores_per_cluster_w,
  h2l_node_reg_dbg_mon_ncr_debug_enabled_w,
  h2l_node_reg_dbg_mon_mfe_debug_enabled_w,
  h2l_node_reg_rt_ctr_real_time_counter_w,
  h2l_node_reg_cdt1_node_credits_w,
  h2l_node_reg_cdt2_node_threads_w,
  h2l_node_reg_amm_0_amm_0_read_rsp_w,
  h2l_node_reg_amm_0_amm_0_read_req_w,
  h2l_node_reg_amm_1_amm_1_read_rsp_w,
  h2l_node_reg_amm_1_amm_1_read_req_w,
  h2l_node_reg_amm_2_amm_2_read_rsp_w,
  h2l_node_reg_amm_2_amm_2_read_req_w,
  h2l_node_reg_amm_3_amm_3_read_rsp_w,
  h2l_node_reg_amm_3_amm_3_read_req_w,
  h2l_node_reg_amm_4_amm_4_read_rsp_w,
  h2l_node_reg_amm_4_amm_4_read_req_w,
  h2l_node_reg_amm_5_amm_5_read_rsp_w,
  h2l_node_reg_amm_5_amm_5_read_req_w,
  h2l_node_reg_amm_6_amm_6_read_rsp_w,
  h2l_node_reg_amm_6_amm_6_read_req_w,
  h2l_node_reg_amm_7_amm_7_read_rsp_w,
  h2l_node_reg_amm_7_amm_7_read_req_w,
  h2l_node_reg_avs_sc_avs_sc_read_rsp_w,
  h2l_node_reg_avs_sc_avs_sc_read_req_w,
  h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w,
  h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w,
  h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w,
  h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w,
  h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w,
  h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w,
  h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w,
  h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w,
  h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w,
  h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w,
  h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w,
  h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w,
  h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w,
  h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w,
  h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w,
  h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w,
  h2l_node_reg_me_reg_avs_me_regif_read_rsp_w,
  h2l_node_reg_me_reg_avs_me_regif_read_req_w,
  h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w,
  h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w,
  h2l_node_reg_cal_fail_all_mem_cal_fail_w,
  h2l_node_reg_cal_fail_all_mem_cal_success_w,
  h2l_node_reg_bar0_max_wait_delay_bar0_w,
  h2l_node_reg_bar2_sc_bar2_write_burst_set_w,
  h2l_node_reg_bar2_sc_bar2_read_burst_set_w,
  h2l_node_reg_bar2_max_wait_delay_bar2_w,

  l2d_node_reg_type_node_r,
  l2d_node_reg_num_nodes_r,
  l2d_node_reg_msp_size_r,
  l2d_node_reg_clst_msp_r,
  l2d_node_reg_cores_cluster_r,
  l2d_node_reg_avl_mon_r,
  l2d_node_reg_dbg_mon_r,
  l2d_node_reg_rt_ctr_r,
  l2d_node_reg_ign_pa_r,
  l2d_node_reg_dis_ls_r,
  l2d_node_reg_cdt1_r,
  l2d_node_reg_cdt2_r,
  l2d_node_reg_hilo_r,
  l2d_node_reg_rst_r,
  l2d_node_reg_amm_0_r,
  l2d_node_reg_amm_1_r,
  l2d_node_reg_amm_2_r,
  l2d_node_reg_amm_3_r,
  l2d_node_reg_amm_4_r,
  l2d_node_reg_amm_5_r,
  l2d_node_reg_amm_6_r,
  l2d_node_reg_amm_7_r,
  l2d_node_reg_avs_sc_r,
  l2d_node_reg_ndlt_0_r,
  l2d_node_reg_ndlt_1_r,
  l2d_node_reg_ndlt_2_r,
  l2d_node_reg_ndlt_3_r,
  l2d_node_reg_ndlt_4_r,
  l2d_node_reg_ndlt_5_r,
  l2d_node_reg_ndlt_6_r,
  l2d_node_reg_ndlt_7_r,
  l2d_node_reg_me_reg_r,
  l2d_node_reg_ncr_reg_r,
  l2d_node_reg_cal_fail_r,
  l2d_node_reg_bar0_r,
  l2d_node_reg_bar2_r,
  l2h_node_reg_type_node_condor_system_r,
  l2h_node_reg_type_node_absolute_node_number_r,
  l2h_node_reg_num_nodes_log2_num_nodes_r,
  l2h_node_reg_msp_size_msp_size_r,
  l2h_node_reg_avl_mon_avalon_timeout_bar2_r,
  l2h_node_reg_avl_mon_avalon_timeout_bar0_r,
  l2h_node_reg_avl_mon_avalon_monitor_bypass2_r,
  l2h_node_reg_avl_mon_avalon_monitor_bypass0_r,
  l2h_node_reg_avl_mon_enable_pcie_read_r,
  l2h_node_reg_rt_ctr_real_time_counter_r,
  l2h_node_reg_ign_pa_ignore_phy_addr_r,
  l2h_node_reg_dis_ls_disable_local_spawn_r,
  l2h_node_reg_cdt1_overwrite_credits_r,
  l2h_node_reg_cdt1_node_credits_r,
  l2h_node_reg_cdt2_track_migration_r,
  l2h_node_reg_cdt2_enable_credits_r,
  l2h_node_reg_hilo_dsp_hi_r,
  l2h_node_reg_hilo_dsp_lo_r,
  l2h_node_reg_rst_reset_srio_control_r,
  l2h_node_reg_rst_reset_srio_r,
  l2h_node_reg_rst_reset_emif_r,
  l2h_node_reg_rst_reset_me_r,
  l2h_node_reg_rst_reset_msp_r,
  l2h_node_reg_rst_reset_cluster_r );

  //------- inputs
  input    clk;
  input    reset;
  input     [63:0] d2l_node_reg_type_node_w;
  input    d2l_node_reg_type_node_we;
  input    d2l_node_reg_type_node_re;
  input     [63:0] d2l_node_reg_num_nodes_w;
  input    d2l_node_reg_num_nodes_we;
  input    d2l_node_reg_num_nodes_re;
  input     [63:0] d2l_node_reg_msp_size_w;
  input    d2l_node_reg_msp_size_we;
  input    d2l_node_reg_msp_size_re;
  input     [63:0] d2l_node_reg_clst_msp_w;
  input    d2l_node_reg_clst_msp_we;
  input    d2l_node_reg_clst_msp_re;
  input     [63:0] d2l_node_reg_cores_cluster_w;
  input    d2l_node_reg_cores_cluster_we;
  input    d2l_node_reg_cores_cluster_re;
  input     [63:0] d2l_node_reg_avl_mon_w;
  input    d2l_node_reg_avl_mon_we;
  input    d2l_node_reg_avl_mon_re;
  input     [31:0] d2l_node_reg_dbg_mon_w;
  input    d2l_node_reg_dbg_mon_we;
  input    d2l_node_reg_dbg_mon_re;
  input     [63:0] d2l_node_reg_rt_ctr_w;
  input    d2l_node_reg_rt_ctr_we;
  input    d2l_node_reg_rt_ctr_re;
  input     [31:0] d2l_node_reg_ign_pa_w;
  input    d2l_node_reg_ign_pa_we;
  input    d2l_node_reg_ign_pa_re;
  input     [31:0] d2l_node_reg_dis_ls_w;
  input    d2l_node_reg_dis_ls_we;
  input    d2l_node_reg_dis_ls_re;
  input     [63:0] d2l_node_reg_cdt1_w;
  input    d2l_node_reg_cdt1_we;
  input    d2l_node_reg_cdt1_re;
  input     [63:0] d2l_node_reg_cdt2_w;
  input    d2l_node_reg_cdt2_we;
  input    d2l_node_reg_cdt2_re;
  input     [31:0] d2l_node_reg_hilo_w;
  input    d2l_node_reg_hilo_we;
  input    d2l_node_reg_hilo_re;
  input     [63:0] d2l_node_reg_rst_w;
  input    d2l_node_reg_rst_we;
  input    d2l_node_reg_rst_re;
  input     [63:0] d2l_node_reg_amm_0_w;
  input    d2l_node_reg_amm_0_we;
  input    d2l_node_reg_amm_0_re;
  input     [63:0] d2l_node_reg_amm_1_w;
  input    d2l_node_reg_amm_1_we;
  input    d2l_node_reg_amm_1_re;
  input     [63:0] d2l_node_reg_amm_2_w;
  input    d2l_node_reg_amm_2_we;
  input    d2l_node_reg_amm_2_re;
  input     [63:0] d2l_node_reg_amm_3_w;
  input    d2l_node_reg_amm_3_we;
  input    d2l_node_reg_amm_3_re;
  input     [63:0] d2l_node_reg_amm_4_w;
  input    d2l_node_reg_amm_4_we;
  input    d2l_node_reg_amm_4_re;
  input     [63:0] d2l_node_reg_amm_5_w;
  input    d2l_node_reg_amm_5_we;
  input    d2l_node_reg_amm_5_re;
  input     [63:0] d2l_node_reg_amm_6_w;
  input    d2l_node_reg_amm_6_we;
  input    d2l_node_reg_amm_6_re;
  input     [63:0] d2l_node_reg_amm_7_w;
  input    d2l_node_reg_amm_7_we;
  input    d2l_node_reg_amm_7_re;
  input     [63:0] d2l_node_reg_avs_sc_w;
  input    d2l_node_reg_avs_sc_we;
  input    d2l_node_reg_avs_sc_re;
  input     [63:0] d2l_node_reg_ndlt_0_w;
  input    d2l_node_reg_ndlt_0_we;
  input    d2l_node_reg_ndlt_0_re;
  input     [63:0] d2l_node_reg_ndlt_1_w;
  input    d2l_node_reg_ndlt_1_we;
  input    d2l_node_reg_ndlt_1_re;
  input     [63:0] d2l_node_reg_ndlt_2_w;
  input    d2l_node_reg_ndlt_2_we;
  input    d2l_node_reg_ndlt_2_re;
  input     [63:0] d2l_node_reg_ndlt_3_w;
  input    d2l_node_reg_ndlt_3_we;
  input    d2l_node_reg_ndlt_3_re;
  input     [63:0] d2l_node_reg_ndlt_4_w;
  input    d2l_node_reg_ndlt_4_we;
  input    d2l_node_reg_ndlt_4_re;
  input     [63:0] d2l_node_reg_ndlt_5_w;
  input    d2l_node_reg_ndlt_5_we;
  input    d2l_node_reg_ndlt_5_re;
  input     [63:0] d2l_node_reg_ndlt_6_w;
  input    d2l_node_reg_ndlt_6_we;
  input    d2l_node_reg_ndlt_6_re;
  input     [63:0] d2l_node_reg_ndlt_7_w;
  input    d2l_node_reg_ndlt_7_we;
  input    d2l_node_reg_ndlt_7_re;
  input     [63:0] d2l_node_reg_me_reg_w;
  input    d2l_node_reg_me_reg_we;
  input    d2l_node_reg_me_reg_re;
  input     [63:0] d2l_node_reg_ncr_reg_w;
  input    d2l_node_reg_ncr_reg_we;
  input    d2l_node_reg_ncr_reg_re;
  input     [63:0] d2l_node_reg_cal_fail_w;
  input    d2l_node_reg_cal_fail_we;
  input    d2l_node_reg_cal_fail_re;
  input     [63:0] d2l_node_reg_bar0_w;
  input    d2l_node_reg_bar0_we;
  input    d2l_node_reg_bar0_re;
  input     [63:0] d2l_node_reg_bar2_w;
  input    d2l_node_reg_bar2_we;
  input    d2l_node_reg_bar2_re;
  input     [3:0] h2l_node_reg_clst_msp_num_clusters_w;
  input     [3:0] h2l_node_reg_clst_msp_num_msps_w;
  input     [3:0] h2l_node_reg_cores_cluster_cores_per_cluster_w;
  input    h2l_node_reg_dbg_mon_ncr_debug_enabled_w;
  input    h2l_node_reg_dbg_mon_mfe_debug_enabled_w;
  input     [63:0] h2l_node_reg_rt_ctr_real_time_counter_w;
  input     [15:0] h2l_node_reg_cdt1_node_credits_w;
  input     [15:0] h2l_node_reg_cdt2_node_threads_w;
  input     [31:0] h2l_node_reg_amm_0_amm_0_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_0_amm_0_read_req_w;
  input     [31:0] h2l_node_reg_amm_1_amm_1_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_1_amm_1_read_req_w;
  input     [31:0] h2l_node_reg_amm_2_amm_2_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_2_amm_2_read_req_w;
  input     [31:0] h2l_node_reg_amm_3_amm_3_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_3_amm_3_read_req_w;
  input     [31:0] h2l_node_reg_amm_4_amm_4_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_4_amm_4_read_req_w;
  input     [31:0] h2l_node_reg_amm_5_amm_5_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_5_amm_5_read_req_w;
  input     [31:0] h2l_node_reg_amm_6_amm_6_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_6_amm_6_read_req_w;
  input     [31:0] h2l_node_reg_amm_7_amm_7_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_7_amm_7_read_req_w;
  input     [31:0] h2l_node_reg_avs_sc_avs_sc_read_rsp_w;
  input     [31:0] h2l_node_reg_avs_sc_avs_sc_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w;
  input     [31:0] h2l_node_reg_me_reg_avs_me_regif_read_rsp_w;
  input     [31:0] h2l_node_reg_me_reg_avs_me_regif_read_req_w;
  input     [31:0] h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w;
  input     [31:0] h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w;
  input     [7:0] h2l_node_reg_cal_fail_all_mem_cal_fail_w;
  input     [7:0] h2l_node_reg_cal_fail_all_mem_cal_success_w;
  input     [16:0] h2l_node_reg_bar0_max_wait_delay_bar0_w;
  input     [5:0] h2l_node_reg_bar2_sc_bar2_write_burst_set_w;
  input     [5:0] h2l_node_reg_bar2_sc_bar2_read_burst_set_w;
  input     [16:0] h2l_node_reg_bar2_max_wait_delay_bar2_w;

  //------- outputs
  output     [63:0] l2d_node_reg_type_node_r;
  output     [63:0] l2d_node_reg_num_nodes_r;
  output     [63:0] l2d_node_reg_msp_size_r;
  output     [63:0] l2d_node_reg_clst_msp_r;
  output     [63:0] l2d_node_reg_cores_cluster_r;
  output     [63:0] l2d_node_reg_avl_mon_r;
  output     [31:0] l2d_node_reg_dbg_mon_r;
  output     [63:0] l2d_node_reg_rt_ctr_r;
  output     [31:0] l2d_node_reg_ign_pa_r;
  output     [31:0] l2d_node_reg_dis_ls_r;
  output     [63:0] l2d_node_reg_cdt1_r;
  output     [63:0] l2d_node_reg_cdt2_r;
  output     [31:0] l2d_node_reg_hilo_r;
  output     [63:0] l2d_node_reg_rst_r;
  output     [63:0] l2d_node_reg_amm_0_r;
  output     [63:0] l2d_node_reg_amm_1_r;
  output     [63:0] l2d_node_reg_amm_2_r;
  output     [63:0] l2d_node_reg_amm_3_r;
  output     [63:0] l2d_node_reg_amm_4_r;
  output     [63:0] l2d_node_reg_amm_5_r;
  output     [63:0] l2d_node_reg_amm_6_r;
  output     [63:0] l2d_node_reg_amm_7_r;
  output     [63:0] l2d_node_reg_avs_sc_r;
  output     [63:0] l2d_node_reg_ndlt_0_r;
  output     [63:0] l2d_node_reg_ndlt_1_r;
  output     [63:0] l2d_node_reg_ndlt_2_r;
  output     [63:0] l2d_node_reg_ndlt_3_r;
  output     [63:0] l2d_node_reg_ndlt_4_r;
  output     [63:0] l2d_node_reg_ndlt_5_r;
  output     [63:0] l2d_node_reg_ndlt_6_r;
  output     [63:0] l2d_node_reg_ndlt_7_r;
  output     [63:0] l2d_node_reg_me_reg_r;
  output     [63:0] l2d_node_reg_ncr_reg_r;
  output     [63:0] l2d_node_reg_cal_fail_r;
  output     [63:0] l2d_node_reg_bar0_r;
  output     [63:0] l2d_node_reg_bar2_r;
  output    l2h_node_reg_type_node_condor_system_r;
  output     [15:0] l2h_node_reg_type_node_absolute_node_number_r;
  output     [4:0] l2h_node_reg_num_nodes_log2_num_nodes_r;
  output     [1:0] l2h_node_reg_msp_size_msp_size_r;
  output     [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar2_r;
  output     [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar0_r;
  output    l2h_node_reg_avl_mon_avalon_monitor_bypass2_r;
  output    l2h_node_reg_avl_mon_avalon_monitor_bypass0_r;
  output    l2h_node_reg_avl_mon_enable_pcie_read_r;
  output     [63:0] l2h_node_reg_rt_ctr_real_time_counter_r;
  output    l2h_node_reg_ign_pa_ignore_phy_addr_r;
  output    l2h_node_reg_dis_ls_disable_local_spawn_r;
  output    l2h_node_reg_cdt1_overwrite_credits_r;
  output     [15:0] l2h_node_reg_cdt1_node_credits_r;
  output    l2h_node_reg_cdt2_track_migration_r;
  output    l2h_node_reg_cdt2_enable_credits_r;
  output    l2h_node_reg_hilo_dsp_hi_r;
  output    l2h_node_reg_hilo_dsp_lo_r;
  output    l2h_node_reg_rst_reset_srio_control_r;
  output     [5:0] l2h_node_reg_rst_reset_srio_r;
  output     [7:0] l2h_node_reg_rst_reset_emif_r;
  output    l2h_node_reg_rst_reset_me_r;
  output     [3:0] l2h_node_reg_rst_reset_msp_r;
  output     [3:0] l2h_node_reg_rst_reset_cluster_r;


  //------- reg defines
  logic  rg_node_reg_type_node_condor_system;
  logic  reg_node_reg_type_node_condor_system_next;
  logic  l2h_node_reg_type_node_condor_system_r;
  logic   [15:0] rg_node_reg_type_node_absolute_node_number;
  logic   [15:0] reg_node_reg_type_node_absolute_node_number_next;
  logic   [15:0] l2h_node_reg_type_node_absolute_node_number_r;
  logic   [63:0] l2d_node_reg_type_node_r;
  logic   [4:0] rg_node_reg_num_nodes_log2_num_nodes;
  logic   [4:0] reg_node_reg_num_nodes_log2_num_nodes_next;
  logic   [4:0] l2h_node_reg_num_nodes_log2_num_nodes_r;
  logic   [63:0] l2d_node_reg_num_nodes_r;
  logic   [1:0] rg_node_reg_msp_size_msp_size;
  logic   [1:0] reg_node_reg_msp_size_msp_size_next;
  logic   [1:0] l2h_node_reg_msp_size_msp_size_r;
  logic   [63:0] l2d_node_reg_msp_size_r;
  logic   [3:0] rg_node_reg_clst_msp_num_clusters;
  logic   [3:0] rg_node_reg_clst_msp_num_msps;
  logic   [63:0] l2d_node_reg_clst_msp_r;
  logic   [3:0] rg_node_reg_cores_cluster_cores_per_cluster;
  logic   [63:0] l2d_node_reg_cores_cluster_r;
  logic   [15:0] rg_node_reg_avl_mon_avalon_timeout_bar2;
  logic   [15:0] reg_node_reg_avl_mon_avalon_timeout_bar2_next;
  logic   [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar2_r;
  logic   [15:0] rg_node_reg_avl_mon_avalon_timeout_bar0;
  logic   [15:0] reg_node_reg_avl_mon_avalon_timeout_bar0_next;
  logic   [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar0_r;
  logic  rg_node_reg_avl_mon_avalon_monitor_bypass2;
  logic  reg_node_reg_avl_mon_avalon_monitor_bypass2_next;
  logic  l2h_node_reg_avl_mon_avalon_monitor_bypass2_r;
  logic  rg_node_reg_avl_mon_avalon_monitor_bypass0;
  logic  reg_node_reg_avl_mon_avalon_monitor_bypass0_next;
  logic  l2h_node_reg_avl_mon_avalon_monitor_bypass0_r;
  logic  rg_node_reg_avl_mon_enable_pcie_read;
  logic  reg_node_reg_avl_mon_enable_pcie_read_next;
  logic  l2h_node_reg_avl_mon_enable_pcie_read_r;
  logic   [63:0] l2d_node_reg_avl_mon_r;
  logic  rg_node_reg_dbg_mon_ncr_debug_enabled;
  logic  rg_node_reg_dbg_mon_mfe_debug_enabled;
  logic   [31:0] l2d_node_reg_dbg_mon_r;
  logic   [63:0] rg_node_reg_rt_ctr_real_time_counter;
  logic   [63:0] reg_node_reg_rt_ctr_real_time_counter_next;
  logic   [63:0] l2h_node_reg_rt_ctr_real_time_counter_r;
  logic   [63:0] l2d_node_reg_rt_ctr_r;
  logic  rg_node_reg_ign_pa_ignore_phy_addr;
  logic  reg_node_reg_ign_pa_ignore_phy_addr_next;
  logic  l2h_node_reg_ign_pa_ignore_phy_addr_r;
  logic   [31:0] l2d_node_reg_ign_pa_r;
  logic  rg_node_reg_dis_ls_disable_local_spawn;
  logic  reg_node_reg_dis_ls_disable_local_spawn_next;
  logic  l2h_node_reg_dis_ls_disable_local_spawn_r;
  logic   [31:0] l2d_node_reg_dis_ls_r;
  logic  rg_node_reg_cdt1_overwrite_credits;
  logic  reg_node_reg_cdt1_overwrite_credits_next;
  logic  l2h_node_reg_cdt1_overwrite_credits_r;
  logic   [15:0] rg_node_reg_cdt1_node_credits;
  logic   [15:0] reg_node_reg_cdt1_node_credits_next;
  logic   [15:0] l2h_node_reg_cdt1_node_credits_r;
  logic   [63:0] l2d_node_reg_cdt1_r;
  logic  rg_node_reg_cdt2_track_migration;
  logic  reg_node_reg_cdt2_track_migration_next;
  logic  l2h_node_reg_cdt2_track_migration_r;
  logic  rg_node_reg_cdt2_enable_credits;
  logic  reg_node_reg_cdt2_enable_credits_next;
  logic  l2h_node_reg_cdt2_enable_credits_r;
  logic   [15:0] rg_node_reg_cdt2_node_threads;
  logic   [63:0] l2d_node_reg_cdt2_r;
  logic  rg_node_reg_hilo_dsp_hi;
  logic  reg_node_reg_hilo_dsp_hi_next;
  logic  l2h_node_reg_hilo_dsp_hi_r;
  logic  rg_node_reg_hilo_dsp_lo;
  logic  reg_node_reg_hilo_dsp_lo_next;
  logic  l2h_node_reg_hilo_dsp_lo_r;
  logic   [31:0] l2d_node_reg_hilo_r;
  logic  rg_node_reg_rst_reset_srio_control;
  logic  reg_node_reg_rst_reset_srio_control_next;
  logic  l2h_node_reg_rst_reset_srio_control_r;
  logic   [5:0] rg_node_reg_rst_reset_srio;
  logic   [5:0] reg_node_reg_rst_reset_srio_next;
  logic   [5:0] l2h_node_reg_rst_reset_srio_r;
  logic   [7:0] rg_node_reg_rst_reset_emif;
  logic   [7:0] reg_node_reg_rst_reset_emif_next;
  logic   [7:0] l2h_node_reg_rst_reset_emif_r;
  logic  rg_node_reg_rst_reset_me;
  logic  reg_node_reg_rst_reset_me_next;
  logic  l2h_node_reg_rst_reset_me_r;
  logic   [3:0] rg_node_reg_rst_reset_msp;
  logic   [3:0] reg_node_reg_rst_reset_msp_next;
  logic   [3:0] l2h_node_reg_rst_reset_msp_r;
  logic   [3:0] rg_node_reg_rst_reset_cluster;
  logic   [3:0] reg_node_reg_rst_reset_cluster_next;
  logic   [3:0] l2h_node_reg_rst_reset_cluster_r;
  logic   [63:0] l2d_node_reg_rst_r;
  logic   [31:0] rg_node_reg_amm_0_amm_0_read_rsp;
  logic   [31:0] rg_node_reg_amm_0_amm_0_read_req;
  logic   [63:0] l2d_node_reg_amm_0_r;
  logic   [31:0] rg_node_reg_amm_1_amm_1_read_rsp;
  logic   [31:0] rg_node_reg_amm_1_amm_1_read_req;
  logic   [63:0] l2d_node_reg_amm_1_r;
  logic   [31:0] rg_node_reg_amm_2_amm_2_read_rsp;
  logic   [31:0] rg_node_reg_amm_2_amm_2_read_req;
  logic   [63:0] l2d_node_reg_amm_2_r;
  logic   [31:0] rg_node_reg_amm_3_amm_3_read_rsp;
  logic   [31:0] rg_node_reg_amm_3_amm_3_read_req;
  logic   [63:0] l2d_node_reg_amm_3_r;
  logic   [31:0] rg_node_reg_amm_4_amm_4_read_rsp;
  logic   [31:0] rg_node_reg_amm_4_amm_4_read_req;
  logic   [63:0] l2d_node_reg_amm_4_r;
  logic   [31:0] rg_node_reg_amm_5_amm_5_read_rsp;
  logic   [31:0] rg_node_reg_amm_5_amm_5_read_req;
  logic   [63:0] l2d_node_reg_amm_5_r;
  logic   [31:0] rg_node_reg_amm_6_amm_6_read_rsp;
  logic   [31:0] rg_node_reg_amm_6_amm_6_read_req;
  logic   [63:0] l2d_node_reg_amm_6_r;
  logic   [31:0] rg_node_reg_amm_7_amm_7_read_rsp;
  logic   [31:0] rg_node_reg_amm_7_amm_7_read_req;
  logic   [63:0] l2d_node_reg_amm_7_r;
  logic   [31:0] rg_node_reg_avs_sc_avs_sc_read_rsp;
  logic   [31:0] rg_node_reg_avs_sc_avs_sc_read_req;
  logic   [63:0] l2d_node_reg_avs_sc_r;
  logic   [31:0] rg_node_reg_ndlt_0_avs_ndlt_0_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_0_avs_ndlt_0_read_req;
  logic   [63:0] l2d_node_reg_ndlt_0_r;
  logic   [31:0] rg_node_reg_ndlt_1_avs_ndlt_1_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_1_avs_ndlt_1_read_req;
  logic   [63:0] l2d_node_reg_ndlt_1_r;
  logic   [31:0] rg_node_reg_ndlt_2_avs_ndlt_2_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_2_avs_ndlt_2_read_req;
  logic   [63:0] l2d_node_reg_ndlt_2_r;
  logic   [31:0] rg_node_reg_ndlt_3_avs_ndlt_3_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_3_avs_ndlt_3_read_req;
  logic   [63:0] l2d_node_reg_ndlt_3_r;
  logic   [31:0] rg_node_reg_ndlt_4_avs_ndlt_4_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_4_avs_ndlt_4_read_req;
  logic   [63:0] l2d_node_reg_ndlt_4_r;
  logic   [31:0] rg_node_reg_ndlt_5_avs_ndlt_5_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_5_avs_ndlt_5_read_req;
  logic   [63:0] l2d_node_reg_ndlt_5_r;
  logic   [31:0] rg_node_reg_ndlt_6_avs_ndlt_6_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_6_avs_ndlt_6_read_req;
  logic   [63:0] l2d_node_reg_ndlt_6_r;
  logic   [31:0] rg_node_reg_ndlt_7_avs_ndlt_7_read_rsp;
  logic   [31:0] rg_node_reg_ndlt_7_avs_ndlt_7_read_req;
  logic   [63:0] l2d_node_reg_ndlt_7_r;
  logic   [31:0] rg_node_reg_me_reg_avs_me_regif_read_rsp;
  logic   [31:0] rg_node_reg_me_reg_avs_me_regif_read_req;
  logic   [63:0] l2d_node_reg_me_reg_r;
  logic   [31:0] rg_node_reg_ncr_reg_avs_ncr_regif_read_rsp;
  logic   [31:0] rg_node_reg_ncr_reg_avs_ncr_regif_read_req;
  logic   [63:0] l2d_node_reg_ncr_reg_r;
  logic   [7:0] rg_node_reg_cal_fail_all_mem_cal_fail;
  logic   [7:0] rg_node_reg_cal_fail_all_mem_cal_success;
  logic   [63:0] l2d_node_reg_cal_fail_r;
  logic   [16:0] rg_node_reg_bar0_max_wait_delay_bar0;
  logic   [63:0] l2d_node_reg_bar0_r;
  logic   [5:0] rg_node_reg_bar2_sc_bar2_write_burst_set;
  logic   [5:0] rg_node_reg_bar2_sc_bar2_read_burst_set;
  logic   [16:0] rg_node_reg_bar2_max_wait_delay_bar2;
  logic   [63:0] l2d_node_reg_bar2_r;
  
  
  //------- combinatorial assigns for node_reg_ncr_reg
  always_comb begin
    rg_node_reg_ncr_reg_avs_ncr_regif_read_rsp =  h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w;
    rg_node_reg_ncr_reg_avs_ncr_regif_read_req =  h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_bar2 (pio read data)
  always_comb begin
    l2d_node_reg_bar2_r = 64'b0;
    l2d_node_reg_bar2_r [45:40]  = rg_node_reg_bar2_sc_bar2_write_burst_set;
    l2d_node_reg_bar2_r [37:32]  = rg_node_reg_bar2_sc_bar2_read_burst_set;
    l2d_node_reg_bar2_r [16:0]  = rg_node_reg_bar2_max_wait_delay_bar2;
  end
  
  //------- combinatorial assigns for node_reg_rst (pio read data)
  always_comb begin
    l2d_node_reg_rst_r = 64'b0;
    l2d_node_reg_rst_r [30]  = rg_node_reg_rst_reset_srio_control;
    l2d_node_reg_rst_r [29:24]  = rg_node_reg_rst_reset_srio;
    l2d_node_reg_rst_r [23:16]  = rg_node_reg_rst_reset_emif;
    l2d_node_reg_rst_r [8]  = rg_node_reg_rst_reset_me;
    l2d_node_reg_rst_r [7:4]  = rg_node_reg_rst_reset_msp;
    l2d_node_reg_rst_r [3:0]  = rg_node_reg_rst_reset_cluster;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_0 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_0_r [63:32]  = rg_node_reg_ndlt_0_avs_ndlt_0_read_rsp;
    l2d_node_reg_ndlt_0_r [31:0]  = rg_node_reg_ndlt_0_avs_ndlt_0_read_req;
  end
  
  //------- combinatorial assigns for node_reg_clst_msp (pio read data)
  always_comb begin
    l2d_node_reg_clst_msp_r = 64'b0;
    l2d_node_reg_clst_msp_r [35:32]  = rg_node_reg_clst_msp_num_clusters;
    l2d_node_reg_clst_msp_r [3:0]  = rg_node_reg_clst_msp_num_msps;
  end
  
  //------- combinatorial assigns for node_reg_cdt2
  always_comb begin
    reg_node_reg_cdt2_track_migration_next = rg_node_reg_cdt2_track_migration;
    l2h_node_reg_cdt2_track_migration_r = rg_node_reg_cdt2_track_migration;
    reg_node_reg_cdt2_enable_credits_next = rg_node_reg_cdt2_enable_credits;
    l2h_node_reg_cdt2_enable_credits_r = rg_node_reg_cdt2_enable_credits;
    rg_node_reg_cdt2_node_threads =  h2l_node_reg_cdt2_node_threads_w;
    if (d2l_node_reg_cdt2_we) reg_node_reg_cdt2_track_migration_next = d2l_node_reg_cdt2_w [63] ;
    if (d2l_node_reg_cdt2_we) reg_node_reg_cdt2_enable_credits_next = d2l_node_reg_cdt2_w [32] ;
  end
  
  //------- reg assigns for node_reg_cdt2
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_cdt2_track_migration <= #1 1'd1;
      rg_node_reg_cdt2_enable_credits <= #1 1'd1;
    end
    else begin
      rg_node_reg_cdt2_track_migration <= #1  reg_node_reg_cdt2_track_migration_next;
      rg_node_reg_cdt2_enable_credits <= #1  reg_node_reg_cdt2_enable_credits_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_amm_3 (pio read data)
  always_comb begin
    l2d_node_reg_amm_3_r [63:32]  = rg_node_reg_amm_3_amm_3_read_rsp;
    l2d_node_reg_amm_3_r [31:0]  = rg_node_reg_amm_3_amm_3_read_req;
  end
  
  //------- combinatorial assigns for node_reg_cdt1
  always_comb begin
    reg_node_reg_cdt1_overwrite_credits_next = 0;
    l2h_node_reg_cdt1_overwrite_credits_r = rg_node_reg_cdt1_overwrite_credits;
    reg_node_reg_cdt1_node_credits_next = h2l_node_reg_cdt1_node_credits_w;
    l2h_node_reg_cdt1_node_credits_r = rg_node_reg_cdt1_node_credits;
    if (d2l_node_reg_cdt1_we) reg_node_reg_cdt1_overwrite_credits_next = d2l_node_reg_cdt1_w [63] ;
    if (d2l_node_reg_cdt1_we) reg_node_reg_cdt1_node_credits_next = d2l_node_reg_cdt1_w [15:0] ;
  end
  
  //------- reg assigns for node_reg_cdt1
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_cdt1_overwrite_credits <= #1 1'd0;
      rg_node_reg_cdt1_node_credits <= #1 16'd0;
    end
    else begin
      rg_node_reg_cdt1_overwrite_credits <= #1  reg_node_reg_cdt1_overwrite_credits_next;
      rg_node_reg_cdt1_node_credits <= #1  reg_node_reg_cdt1_node_credits_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_cores_cluster (pio read data)
  always_comb begin
    l2d_node_reg_cores_cluster_r = 64'b0;
    l2d_node_reg_cores_cluster_r [3:0]  = rg_node_reg_cores_cluster_cores_per_cluster;
  end
  
  //------- combinatorial assigns for node_reg_avl_mon
  always_comb begin
    reg_node_reg_avl_mon_avalon_timeout_bar2_next = rg_node_reg_avl_mon_avalon_timeout_bar2;
    l2h_node_reg_avl_mon_avalon_timeout_bar2_r = rg_node_reg_avl_mon_avalon_timeout_bar2;
    reg_node_reg_avl_mon_avalon_timeout_bar0_next = rg_node_reg_avl_mon_avalon_timeout_bar0;
    l2h_node_reg_avl_mon_avalon_timeout_bar0_r = rg_node_reg_avl_mon_avalon_timeout_bar0;
    reg_node_reg_avl_mon_avalon_monitor_bypass2_next = rg_node_reg_avl_mon_avalon_monitor_bypass2;
    l2h_node_reg_avl_mon_avalon_monitor_bypass2_r = rg_node_reg_avl_mon_avalon_monitor_bypass2;
    reg_node_reg_avl_mon_avalon_monitor_bypass0_next = rg_node_reg_avl_mon_avalon_monitor_bypass0;
    l2h_node_reg_avl_mon_avalon_monitor_bypass0_r = rg_node_reg_avl_mon_avalon_monitor_bypass0;
    reg_node_reg_avl_mon_enable_pcie_read_next = rg_node_reg_avl_mon_enable_pcie_read;
    l2h_node_reg_avl_mon_enable_pcie_read_r = rg_node_reg_avl_mon_enable_pcie_read;
    if (d2l_node_reg_avl_mon_we) reg_node_reg_avl_mon_avalon_timeout_bar2_next = d2l_node_reg_avl_mon_w [47:32] ;
    if (d2l_node_reg_avl_mon_we) reg_node_reg_avl_mon_avalon_timeout_bar0_next = d2l_node_reg_avl_mon_w [31:16] ;
    if (d2l_node_reg_avl_mon_we) reg_node_reg_avl_mon_avalon_monitor_bypass2_next = d2l_node_reg_avl_mon_w [9] ;
    if (d2l_node_reg_avl_mon_we) reg_node_reg_avl_mon_avalon_monitor_bypass0_next = d2l_node_reg_avl_mon_w [8] ;
    if (d2l_node_reg_avl_mon_we) reg_node_reg_avl_mon_enable_pcie_read_next = d2l_node_reg_avl_mon_w [0] ;
  end
  
  //------- reg assigns for node_reg_avl_mon
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_avl_mon_avalon_timeout_bar2 <= #1 16'hffff;
      rg_node_reg_avl_mon_avalon_timeout_bar0 <= #1 16'hffff;
      rg_node_reg_avl_mon_avalon_monitor_bypass2 <= #1 1'd1;
      rg_node_reg_avl_mon_avalon_monitor_bypass0 <= #1 1'd1;
      rg_node_reg_avl_mon_enable_pcie_read <= #1 1'd1;
    end
    else begin
      rg_node_reg_avl_mon_avalon_timeout_bar2 <= #1  reg_node_reg_avl_mon_avalon_timeout_bar2_next;
      rg_node_reg_avl_mon_avalon_timeout_bar0 <= #1  reg_node_reg_avl_mon_avalon_timeout_bar0_next;
      rg_node_reg_avl_mon_avalon_monitor_bypass2 <= #1  reg_node_reg_avl_mon_avalon_monitor_bypass2_next;
      rg_node_reg_avl_mon_avalon_monitor_bypass0 <= #1  reg_node_reg_avl_mon_avalon_monitor_bypass0_next;
      rg_node_reg_avl_mon_enable_pcie_read <= #1  reg_node_reg_avl_mon_enable_pcie_read_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_amm_6 (pio read data)
  always_comb begin
    l2d_node_reg_amm_6_r [63:32]  = rg_node_reg_amm_6_amm_6_read_rsp;
    l2d_node_reg_amm_6_r [31:0]  = rg_node_reg_amm_6_amm_6_read_req;
  end
  
  //------- combinatorial assigns for node_reg_amm_0 (pio read data)
  always_comb begin
    l2d_node_reg_amm_0_r [63:32]  = rg_node_reg_amm_0_amm_0_read_rsp;
    l2d_node_reg_amm_0_r [31:0]  = rg_node_reg_amm_0_amm_0_read_req;
  end
  
  //------- combinatorial assigns for node_reg_me_reg (pio read data)
  always_comb begin
    l2d_node_reg_me_reg_r [63:32]  = rg_node_reg_me_reg_avs_me_regif_read_rsp;
    l2d_node_reg_me_reg_r [31:0]  = rg_node_reg_me_reg_avs_me_regif_read_req;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_7 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_7_r [63:32]  = rg_node_reg_ndlt_7_avs_ndlt_7_read_rsp;
    l2d_node_reg_ndlt_7_r [31:0]  = rg_node_reg_ndlt_7_avs_ndlt_7_read_req;
  end
  
  //------- combinatorial assigns for node_reg_rst
  always_comb begin
    reg_node_reg_rst_reset_srio_control_next = rg_node_reg_rst_reset_srio_control;
    l2h_node_reg_rst_reset_srio_control_r = rg_node_reg_rst_reset_srio_control;
    reg_node_reg_rst_reset_srio_next = rg_node_reg_rst_reset_srio;
    l2h_node_reg_rst_reset_srio_r = rg_node_reg_rst_reset_srio;
    reg_node_reg_rst_reset_emif_next = rg_node_reg_rst_reset_emif;
    l2h_node_reg_rst_reset_emif_r = rg_node_reg_rst_reset_emif;
    reg_node_reg_rst_reset_me_next = rg_node_reg_rst_reset_me;
    l2h_node_reg_rst_reset_me_r = rg_node_reg_rst_reset_me;
    reg_node_reg_rst_reset_msp_next = rg_node_reg_rst_reset_msp;
    l2h_node_reg_rst_reset_msp_r = rg_node_reg_rst_reset_msp;
    reg_node_reg_rst_reset_cluster_next = rg_node_reg_rst_reset_cluster;
    l2h_node_reg_rst_reset_cluster_r = rg_node_reg_rst_reset_cluster;
    if (d2l_node_reg_rst_we) reg_node_reg_rst_reset_srio_control_next = d2l_node_reg_rst_w [30] ;
    if (d2l_node_reg_rst_we) reg_node_reg_rst_reset_srio_next = d2l_node_reg_rst_w [29:24] ;
    if (d2l_node_reg_rst_we) reg_node_reg_rst_reset_emif_next = d2l_node_reg_rst_w [23:16] ;
    if (d2l_node_reg_rst_we) reg_node_reg_rst_reset_me_next = d2l_node_reg_rst_w [8] ;
    if (d2l_node_reg_rst_we) reg_node_reg_rst_reset_msp_next = d2l_node_reg_rst_w [7:4] ;
    if (d2l_node_reg_rst_we) reg_node_reg_rst_reset_cluster_next = d2l_node_reg_rst_w [3:0] ;
  end
  
  //------- reg assigns for node_reg_rst
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_rst_reset_srio_control <= #1 1'd0;
      rg_node_reg_rst_reset_srio <= #1 6'd0;
      rg_node_reg_rst_reset_emif <= #1 8'd0;
      rg_node_reg_rst_reset_me <= #1 1'd0;
      rg_node_reg_rst_reset_msp <= #1 4'd0;
      rg_node_reg_rst_reset_cluster <= #1 4'd0;
    end
    else begin
      rg_node_reg_rst_reset_srio_control <= #1  reg_node_reg_rst_reset_srio_control_next;
      rg_node_reg_rst_reset_srio <= #1  reg_node_reg_rst_reset_srio_next;
      rg_node_reg_rst_reset_emif <= #1  reg_node_reg_rst_reset_emif_next;
      rg_node_reg_rst_reset_me <= #1  reg_node_reg_rst_reset_me_next;
      rg_node_reg_rst_reset_msp <= #1  reg_node_reg_rst_reset_msp_next;
      rg_node_reg_rst_reset_cluster <= #1  reg_node_reg_rst_reset_cluster_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_num_nodes (pio read data)
  always_comb begin
    l2d_node_reg_num_nodes_r = 64'b0;
    l2d_node_reg_num_nodes_r [4:0]  = rg_node_reg_num_nodes_log2_num_nodes;
  end
  
  //------- combinatorial assigns for node_reg_bar2
  always_comb begin
    rg_node_reg_bar2_sc_bar2_write_burst_set =  h2l_node_reg_bar2_sc_bar2_write_burst_set_w;
    rg_node_reg_bar2_sc_bar2_read_burst_set =  h2l_node_reg_bar2_sc_bar2_read_burst_set_w;
    rg_node_reg_bar2_max_wait_delay_bar2 =  h2l_node_reg_bar2_max_wait_delay_bar2_w;
  end
  
  //------- combinatorial assigns for node_reg_type_node
  always_comb begin
    reg_node_reg_type_node_condor_system_next = rg_node_reg_type_node_condor_system;
    l2h_node_reg_type_node_condor_system_r = rg_node_reg_type_node_condor_system;
    reg_node_reg_type_node_absolute_node_number_next = rg_node_reg_type_node_absolute_node_number;
    l2h_node_reg_type_node_absolute_node_number_r = rg_node_reg_type_node_absolute_node_number;
    if (d2l_node_reg_type_node_we) reg_node_reg_type_node_condor_system_next = d2l_node_reg_type_node_w [16] ;
    if (d2l_node_reg_type_node_we) reg_node_reg_type_node_absolute_node_number_next = d2l_node_reg_type_node_w [15:0] ;
  end
  
  //------- reg assigns for node_reg_type_node
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_type_node_condor_system <= #1 1'd0;
      rg_node_reg_type_node_absolute_node_number <= #1 16'd0;
    end
    else begin
      rg_node_reg_type_node_condor_system <= #1  reg_node_reg_type_node_condor_system_next;
      rg_node_reg_type_node_absolute_node_number <= #1  reg_node_reg_type_node_absolute_node_number_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_hilo (pio read data)
  always_comb begin
    l2d_node_reg_hilo_r = 32'b0;
    l2d_node_reg_hilo_r [1]  = rg_node_reg_hilo_dsp_hi;
    l2d_node_reg_hilo_r [0]  = rg_node_reg_hilo_dsp_lo;
  end
  
  //------- combinatorial assigns for node_reg_rt_ctr (pio read data)
  always_comb begin
    l2d_node_reg_rt_ctr_r = rg_node_reg_rt_ctr_real_time_counter;
  end
  
  //------- combinatorial assigns for node_reg_bar0
  always_comb begin
    rg_node_reg_bar0_max_wait_delay_bar0 =  h2l_node_reg_bar0_max_wait_delay_bar0_w;
  end
  
  //------- combinatorial assigns for node_reg_type_node (pio read data)
  always_comb begin
    l2d_node_reg_type_node_r = 64'b0;
    l2d_node_reg_type_node_r [16]  = rg_node_reg_type_node_condor_system;
    l2d_node_reg_type_node_r [15:0]  = rg_node_reg_type_node_absolute_node_number;
  end
  
  //------- combinatorial assigns for node_reg_dis_ls (pio read data)
  always_comb begin
    l2d_node_reg_dis_ls_r = 32'b0;
    l2d_node_reg_dis_ls_r [0]  = rg_node_reg_dis_ls_disable_local_spawn;
  end
  
  //------- combinatorial assigns for node_reg_dis_ls
  always_comb begin
    reg_node_reg_dis_ls_disable_local_spawn_next = rg_node_reg_dis_ls_disable_local_spawn;
    l2h_node_reg_dis_ls_disable_local_spawn_r = rg_node_reg_dis_ls_disable_local_spawn;
    if (d2l_node_reg_dis_ls_we) reg_node_reg_dis_ls_disable_local_spawn_next = d2l_node_reg_dis_ls_w [0] ;
  end
  
  //------- reg assigns for node_reg_dis_ls
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_dis_ls_disable_local_spawn <= #1 1'd0;
    end
    else begin
      rg_node_reg_dis_ls_disable_local_spawn <= #1  reg_node_reg_dis_ls_disable_local_spawn_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_avs_sc
  always_comb begin
    rg_node_reg_avs_sc_avs_sc_read_rsp =  h2l_node_reg_avs_sc_avs_sc_read_rsp_w;
    rg_node_reg_avs_sc_avs_sc_read_req =  h2l_node_reg_avs_sc_avs_sc_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_ign_pa
  always_comb begin
    reg_node_reg_ign_pa_ignore_phy_addr_next = rg_node_reg_ign_pa_ignore_phy_addr;
    l2h_node_reg_ign_pa_ignore_phy_addr_r = rg_node_reg_ign_pa_ignore_phy_addr;
    if (d2l_node_reg_ign_pa_we) reg_node_reg_ign_pa_ignore_phy_addr_next = d2l_node_reg_ign_pa_w [0] ;
  end
  
  //------- reg assigns for node_reg_ign_pa
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_ign_pa_ignore_phy_addr <= #1 1'd0;
    end
    else begin
      rg_node_reg_ign_pa_ignore_phy_addr <= #1  reg_node_reg_ign_pa_ignore_phy_addr_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_ndlt_3 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_3_r [63:32]  = rg_node_reg_ndlt_3_avs_ndlt_3_read_rsp;
    l2d_node_reg_ndlt_3_r [31:0]  = rg_node_reg_ndlt_3_avs_ndlt_3_read_req;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_6 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_6_r [63:32]  = rg_node_reg_ndlt_6_avs_ndlt_6_read_rsp;
    l2d_node_reg_ndlt_6_r [31:0]  = rg_node_reg_ndlt_6_avs_ndlt_6_read_req;
  end
  
  //------- combinatorial assigns for node_reg_cal_fail
  always_comb begin
    rg_node_reg_cal_fail_all_mem_cal_fail =  h2l_node_reg_cal_fail_all_mem_cal_fail_w;
    rg_node_reg_cal_fail_all_mem_cal_success =  h2l_node_reg_cal_fail_all_mem_cal_success_w;
  end
  
  //------- combinatorial assigns for node_reg_msp_size (pio read data)
  always_comb begin
    l2d_node_reg_msp_size_r = 64'b0;
    l2d_node_reg_msp_size_r [1:0]  = rg_node_reg_msp_size_msp_size;
  end
  
  //------- combinatorial assigns for node_reg_dbg_mon (pio read data)
  always_comb begin
    l2d_node_reg_dbg_mon_r = 32'b0;
    l2d_node_reg_dbg_mon_r [2]  = rg_node_reg_dbg_mon_ncr_debug_enabled;
    l2d_node_reg_dbg_mon_r [1]  = rg_node_reg_dbg_mon_mfe_debug_enabled;
  end
  
  //------- combinatorial assigns for node_reg_avs_sc (pio read data)
  always_comb begin
    l2d_node_reg_avs_sc_r [63:32]  = rg_node_reg_avs_sc_avs_sc_read_rsp;
    l2d_node_reg_avs_sc_r [31:0]  = rg_node_reg_avs_sc_avs_sc_read_req;
  end
  
  //------- combinatorial assigns for node_reg_amm_7
  always_comb begin
    rg_node_reg_amm_7_amm_7_read_rsp =  h2l_node_reg_amm_7_amm_7_read_rsp_w;
    rg_node_reg_amm_7_amm_7_read_req =  h2l_node_reg_amm_7_amm_7_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_cdt1 (pio read data)
  always_comb begin
    l2d_node_reg_cdt1_r = 64'b0;
    l2d_node_reg_cdt1_r [63]  = rg_node_reg_cdt1_overwrite_credits;
    l2d_node_reg_cdt1_r [15:0]  = rg_node_reg_cdt1_node_credits;
  end
  
  //------- combinatorial assigns for node_reg_amm_6
  always_comb begin
    rg_node_reg_amm_6_amm_6_read_rsp =  h2l_node_reg_amm_6_amm_6_read_rsp_w;
    rg_node_reg_amm_6_amm_6_read_req =  h2l_node_reg_amm_6_amm_6_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_avl_mon (pio read data)
  always_comb begin
    l2d_node_reg_avl_mon_r = 64'b0;
    l2d_node_reg_avl_mon_r [47:32]  = rg_node_reg_avl_mon_avalon_timeout_bar2;
    l2d_node_reg_avl_mon_r [31:16]  = rg_node_reg_avl_mon_avalon_timeout_bar0;
    l2d_node_reg_avl_mon_r [9]  = rg_node_reg_avl_mon_avalon_monitor_bypass2;
    l2d_node_reg_avl_mon_r [8]  = rg_node_reg_avl_mon_avalon_monitor_bypass0;
    l2d_node_reg_avl_mon_r [0]  = rg_node_reg_avl_mon_enable_pcie_read;
  end
  
  //------- combinatorial assigns for node_reg_msp_size
  always_comb begin
    reg_node_reg_msp_size_msp_size_next = rg_node_reg_msp_size_msp_size;
    l2h_node_reg_msp_size_msp_size_r = rg_node_reg_msp_size_msp_size;
    if (d2l_node_reg_msp_size_we) reg_node_reg_msp_size_msp_size_next = d2l_node_reg_msp_size_w [1:0] ;
  end
  
  //------- reg assigns for node_reg_msp_size
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_msp_size_msp_size <= #1 2'd0;
    end
    else begin
      rg_node_reg_msp_size_msp_size <= #1  reg_node_reg_msp_size_msp_size_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_num_nodes
  always_comb begin
    reg_node_reg_num_nodes_log2_num_nodes_next = rg_node_reg_num_nodes_log2_num_nodes;
    l2h_node_reg_num_nodes_log2_num_nodes_r = rg_node_reg_num_nodes_log2_num_nodes;
    if (d2l_node_reg_num_nodes_we) reg_node_reg_num_nodes_log2_num_nodes_next = d2l_node_reg_num_nodes_w [4:0] ;
  end
  
  //------- reg assigns for node_reg_num_nodes
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_num_nodes_log2_num_nodes <= #1 5'd0;
    end
    else begin
      rg_node_reg_num_nodes_log2_num_nodes <= #1  reg_node_reg_num_nodes_log2_num_nodes_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_ndlt_5 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_5_r [63:32]  = rg_node_reg_ndlt_5_avs_ndlt_5_read_rsp;
    l2d_node_reg_ndlt_5_r [31:0]  = rg_node_reg_ndlt_5_avs_ndlt_5_read_req;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_2 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_2_r [63:32]  = rg_node_reg_ndlt_2_avs_ndlt_2_read_rsp;
    l2d_node_reg_ndlt_2_r [31:0]  = rg_node_reg_ndlt_2_avs_ndlt_2_read_req;
  end
  
  //------- combinatorial assigns for node_reg_amm_4 (pio read data)
  always_comb begin
    l2d_node_reg_amm_4_r [63:32]  = rg_node_reg_amm_4_amm_4_read_rsp;
    l2d_node_reg_amm_4_r [31:0]  = rg_node_reg_amm_4_amm_4_read_req;
  end
  
  //------- combinatorial assigns for node_reg_amm_3
  always_comb begin
    rg_node_reg_amm_3_amm_3_read_rsp =  h2l_node_reg_amm_3_amm_3_read_rsp_w;
    rg_node_reg_amm_3_amm_3_read_req =  h2l_node_reg_amm_3_amm_3_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_amm_2
  always_comb begin
    rg_node_reg_amm_2_amm_2_read_rsp =  h2l_node_reg_amm_2_amm_2_read_rsp_w;
    rg_node_reg_amm_2_amm_2_read_req =  h2l_node_reg_amm_2_amm_2_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_amm_1 (pio read data)
  always_comb begin
    l2d_node_reg_amm_1_r [63:32]  = rg_node_reg_amm_1_amm_1_read_rsp;
    l2d_node_reg_amm_1_r [31:0]  = rg_node_reg_amm_1_amm_1_read_req;
  end
  
  //------- combinatorial assigns for node_reg_amm_5
  always_comb begin
    rg_node_reg_amm_5_amm_5_read_rsp =  h2l_node_reg_amm_5_amm_5_read_rsp_w;
    rg_node_reg_amm_5_amm_5_read_req =  h2l_node_reg_amm_5_amm_5_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_amm_4
  always_comb begin
    rg_node_reg_amm_4_amm_4_read_rsp =  h2l_node_reg_amm_4_amm_4_read_rsp_w;
    rg_node_reg_amm_4_amm_4_read_req =  h2l_node_reg_amm_4_amm_4_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_amm_7 (pio read data)
  always_comb begin
    l2d_node_reg_amm_7_r [63:32]  = rg_node_reg_amm_7_amm_7_read_rsp;
    l2d_node_reg_amm_7_r [31:0]  = rg_node_reg_amm_7_amm_7_read_req;
  end
  
  //------- combinatorial assigns for node_reg_me_reg
  always_comb begin
    rg_node_reg_me_reg_avs_me_regif_read_rsp =  h2l_node_reg_me_reg_avs_me_regif_read_rsp_w;
    rg_node_reg_me_reg_avs_me_regif_read_req =  h2l_node_reg_me_reg_avs_me_regif_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_1 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_1_r [63:32]  = rg_node_reg_ndlt_1_avs_ndlt_1_read_rsp;
    l2d_node_reg_ndlt_1_r [31:0]  = rg_node_reg_ndlt_1_avs_ndlt_1_read_req;
  end
  
  //------- combinatorial assigns for node_reg_cal_fail (pio read data)
  always_comb begin
    l2d_node_reg_cal_fail_r = 64'b0;
    l2d_node_reg_cal_fail_r [15:8]  = rg_node_reg_cal_fail_all_mem_cal_fail;
    l2d_node_reg_cal_fail_r [7:0]  = rg_node_reg_cal_fail_all_mem_cal_success;
  end
  
  //------- combinatorial assigns for node_reg_amm_1
  always_comb begin
    rg_node_reg_amm_1_amm_1_read_rsp =  h2l_node_reg_amm_1_amm_1_read_rsp_w;
    rg_node_reg_amm_1_amm_1_read_req =  h2l_node_reg_amm_1_amm_1_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_amm_0
  always_comb begin
    rg_node_reg_amm_0_amm_0_read_rsp =  h2l_node_reg_amm_0_amm_0_read_rsp_w;
    rg_node_reg_amm_0_amm_0_read_req =  h2l_node_reg_amm_0_amm_0_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_4
  always_comb begin
    rg_node_reg_ndlt_4_avs_ndlt_4_read_rsp =  h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w;
    rg_node_reg_ndlt_4_avs_ndlt_4_read_req =  h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_clst_msp
  always_comb begin
    rg_node_reg_clst_msp_num_clusters =  h2l_node_reg_clst_msp_num_clusters_w;
    rg_node_reg_clst_msp_num_msps =  h2l_node_reg_clst_msp_num_msps_w;
  end
  
  //------- combinatorial assigns for node_reg_amm_2 (pio read data)
  always_comb begin
    l2d_node_reg_amm_2_r [63:32]  = rg_node_reg_amm_2_amm_2_read_rsp;
    l2d_node_reg_amm_2_r [31:0]  = rg_node_reg_amm_2_amm_2_read_req;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_3
  always_comb begin
    rg_node_reg_ndlt_3_avs_ndlt_3_read_rsp =  h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w;
    rg_node_reg_ndlt_3_avs_ndlt_3_read_req =  h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_2
  always_comb begin
    rg_node_reg_ndlt_2_avs_ndlt_2_read_rsp =  h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w;
    rg_node_reg_ndlt_2_avs_ndlt_2_read_req =  h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_4 (pio read data)
  always_comb begin
    l2d_node_reg_ndlt_4_r [63:32]  = rg_node_reg_ndlt_4_avs_ndlt_4_read_rsp;
    l2d_node_reg_ndlt_4_r [31:0]  = rg_node_reg_ndlt_4_avs_ndlt_4_read_req;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_1
  always_comb begin
    rg_node_reg_ndlt_1_avs_ndlt_1_read_rsp =  h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w;
    rg_node_reg_ndlt_1_avs_ndlt_1_read_req =  h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_7
  always_comb begin
    rg_node_reg_ndlt_7_avs_ndlt_7_read_rsp =  h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w;
    rg_node_reg_ndlt_7_avs_ndlt_7_read_req =  h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_rt_ctr
  always_comb begin
    reg_node_reg_rt_ctr_real_time_counter_next = h2l_node_reg_rt_ctr_real_time_counter_w;
    l2h_node_reg_rt_ctr_real_time_counter_r = rg_node_reg_rt_ctr_real_time_counter;
    if (d2l_node_reg_rt_ctr_we) reg_node_reg_rt_ctr_real_time_counter_next = d2l_node_reg_rt_ctr_w;
  end
  
  //------- reg assigns for node_reg_rt_ctr
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_rt_ctr_real_time_counter <= #1 64'hffffffffffffffff;
    end
    else begin
      rg_node_reg_rt_ctr_real_time_counter <= #1  reg_node_reg_rt_ctr_real_time_counter_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_amm_5 (pio read data)
  always_comb begin
    l2d_node_reg_amm_5_r [63:32]  = rg_node_reg_amm_5_amm_5_read_rsp;
    l2d_node_reg_amm_5_r [31:0]  = rg_node_reg_amm_5_amm_5_read_req;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_6
  always_comb begin
    rg_node_reg_ndlt_6_avs_ndlt_6_read_rsp =  h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w;
    rg_node_reg_ndlt_6_avs_ndlt_6_read_req =  h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_5
  always_comb begin
    rg_node_reg_ndlt_5_avs_ndlt_5_read_rsp =  h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w;
    rg_node_reg_ndlt_5_avs_ndlt_5_read_req =  h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_cores_cluster
  always_comb begin
    rg_node_reg_cores_cluster_cores_per_cluster =  h2l_node_reg_cores_cluster_cores_per_cluster_w;
  end
  
  //------- combinatorial assigns for node_reg_ign_pa (pio read data)
  always_comb begin
    l2d_node_reg_ign_pa_r = 32'b0;
    l2d_node_reg_ign_pa_r [0]  = rg_node_reg_ign_pa_ignore_phy_addr;
  end
  
  //------- combinatorial assigns for node_reg_ndlt_0
  always_comb begin
    rg_node_reg_ndlt_0_avs_ndlt_0_read_rsp =  h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w;
    rg_node_reg_ndlt_0_avs_ndlt_0_read_req =  h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w;
  end
  
  //------- combinatorial assigns for node_reg_dbg_mon
  always_comb begin
    rg_node_reg_dbg_mon_ncr_debug_enabled =  h2l_node_reg_dbg_mon_ncr_debug_enabled_w;
    rg_node_reg_dbg_mon_mfe_debug_enabled =  h2l_node_reg_dbg_mon_mfe_debug_enabled_w;
  end
  
  //------- combinatorial assigns for node_reg_bar0 (pio read data)
  always_comb begin
    l2d_node_reg_bar0_r = 64'b0;
    l2d_node_reg_bar0_r [16:0]  = rg_node_reg_bar0_max_wait_delay_bar0;
  end
  
  //------- combinatorial assigns for node_reg_cdt2 (pio read data)
  always_comb begin
    l2d_node_reg_cdt2_r = 64'b0;
    l2d_node_reg_cdt2_r [63]  = rg_node_reg_cdt2_track_migration;
    l2d_node_reg_cdt2_r [32]  = rg_node_reg_cdt2_enable_credits;
    l2d_node_reg_cdt2_r [15:0]  = rg_node_reg_cdt2_node_threads;
  end
  
  //------- combinatorial assigns for node_reg_hilo
  always_comb begin
    reg_node_reg_hilo_dsp_hi_next = rg_node_reg_hilo_dsp_hi;
    l2h_node_reg_hilo_dsp_hi_r = rg_node_reg_hilo_dsp_hi;
    reg_node_reg_hilo_dsp_lo_next = rg_node_reg_hilo_dsp_lo;
    l2h_node_reg_hilo_dsp_lo_r = rg_node_reg_hilo_dsp_lo;
    if (d2l_node_reg_hilo_we) reg_node_reg_hilo_dsp_hi_next = d2l_node_reg_hilo_w [1] ;
    if (d2l_node_reg_hilo_we) reg_node_reg_hilo_dsp_lo_next = d2l_node_reg_hilo_w [0] ;
  end
  
  //------- reg assigns for node_reg_hilo
  always_ff @ (posedge clk) begin
    if (reset) begin
      rg_node_reg_hilo_dsp_hi <= #1 1'd1;
      rg_node_reg_hilo_dsp_lo <= #1 1'd0;
    end
    else begin
      rg_node_reg_hilo_dsp_hi <= #1  reg_node_reg_hilo_dsp_hi_next;
      rg_node_reg_hilo_dsp_lo <= #1  reg_node_reg_hilo_dsp_lo_next;
    end
  end
  
  //------- combinatorial assigns for node_reg_ncr_reg (pio read data)
  always_comb begin
    l2d_node_reg_ncr_reg_r [63:32]  = rg_node_reg_ncr_reg_avs_ncr_regif_read_rsp;
    l2d_node_reg_ncr_reg_r [31:0]  = rg_node_reg_ncr_reg_avs_ncr_regif_read_req;
  end
  
endmodule

//
//---------- module top_jrdl_decode
//
module top_jrdl_decode
(
  clk,
  reset,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,
  l2d_node_reg_type_node_r,
  l2d_node_reg_num_nodes_r,
  l2d_node_reg_msp_size_r,
  l2d_node_reg_clst_msp_r,
  l2d_node_reg_cores_cluster_r,
  l2d_node_reg_avl_mon_r,
  l2d_node_reg_dbg_mon_r,
  l2d_node_reg_rt_ctr_r,
  l2d_node_reg_ign_pa_r,
  l2d_node_reg_dis_ls_r,
  l2d_node_reg_cdt1_r,
  l2d_node_reg_cdt2_r,
  l2d_node_reg_hilo_r,
  l2d_node_reg_rst_r,
  l2d_node_reg_amm_0_r,
  l2d_node_reg_amm_1_r,
  l2d_node_reg_amm_2_r,
  l2d_node_reg_amm_3_r,
  l2d_node_reg_amm_4_r,
  l2d_node_reg_amm_5_r,
  l2d_node_reg_amm_6_r,
  l2d_node_reg_amm_7_r,
  l2d_node_reg_avs_sc_r,
  l2d_node_reg_ndlt_0_r,
  l2d_node_reg_ndlt_1_r,
  l2d_node_reg_ndlt_2_r,
  l2d_node_reg_ndlt_3_r,
  l2d_node_reg_ndlt_4_r,
  l2d_node_reg_ndlt_5_r,
  l2d_node_reg_ndlt_6_r,
  l2d_node_reg_ndlt_7_r,
  l2d_node_reg_me_reg_r,
  l2d_node_reg_ncr_reg_r,
  l2d_node_reg_cal_fail_r,
  l2d_node_reg_bar0_r,
  l2d_node_reg_bar2_r,

  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width,
  d2l_node_reg_type_node_w,
  d2l_node_reg_type_node_we,
  d2l_node_reg_type_node_re,
  d2l_node_reg_num_nodes_w,
  d2l_node_reg_num_nodes_we,
  d2l_node_reg_num_nodes_re,
  d2l_node_reg_msp_size_w,
  d2l_node_reg_msp_size_we,
  d2l_node_reg_msp_size_re,
  d2l_node_reg_clst_msp_w,
  d2l_node_reg_clst_msp_we,
  d2l_node_reg_clst_msp_re,
  d2l_node_reg_cores_cluster_w,
  d2l_node_reg_cores_cluster_we,
  d2l_node_reg_cores_cluster_re,
  d2l_node_reg_avl_mon_w,
  d2l_node_reg_avl_mon_we,
  d2l_node_reg_avl_mon_re,
  d2l_node_reg_dbg_mon_w,
  d2l_node_reg_dbg_mon_we,
  d2l_node_reg_dbg_mon_re,
  d2l_node_reg_rt_ctr_w,
  d2l_node_reg_rt_ctr_we,
  d2l_node_reg_rt_ctr_re,
  d2l_node_reg_ign_pa_w,
  d2l_node_reg_ign_pa_we,
  d2l_node_reg_ign_pa_re,
  d2l_node_reg_dis_ls_w,
  d2l_node_reg_dis_ls_we,
  d2l_node_reg_dis_ls_re,
  d2l_node_reg_cdt1_w,
  d2l_node_reg_cdt1_we,
  d2l_node_reg_cdt1_re,
  d2l_node_reg_cdt2_w,
  d2l_node_reg_cdt2_we,
  d2l_node_reg_cdt2_re,
  d2l_node_reg_hilo_w,
  d2l_node_reg_hilo_we,
  d2l_node_reg_hilo_re,
  d2l_node_reg_rst_w,
  d2l_node_reg_rst_we,
  d2l_node_reg_rst_re,
  d2l_node_reg_amm_0_w,
  d2l_node_reg_amm_0_we,
  d2l_node_reg_amm_0_re,
  d2l_node_reg_amm_1_w,
  d2l_node_reg_amm_1_we,
  d2l_node_reg_amm_1_re,
  d2l_node_reg_amm_2_w,
  d2l_node_reg_amm_2_we,
  d2l_node_reg_amm_2_re,
  d2l_node_reg_amm_3_w,
  d2l_node_reg_amm_3_we,
  d2l_node_reg_amm_3_re,
  d2l_node_reg_amm_4_w,
  d2l_node_reg_amm_4_we,
  d2l_node_reg_amm_4_re,
  d2l_node_reg_amm_5_w,
  d2l_node_reg_amm_5_we,
  d2l_node_reg_amm_5_re,
  d2l_node_reg_amm_6_w,
  d2l_node_reg_amm_6_we,
  d2l_node_reg_amm_6_re,
  d2l_node_reg_amm_7_w,
  d2l_node_reg_amm_7_we,
  d2l_node_reg_amm_7_re,
  d2l_node_reg_avs_sc_w,
  d2l_node_reg_avs_sc_we,
  d2l_node_reg_avs_sc_re,
  d2l_node_reg_ndlt_0_w,
  d2l_node_reg_ndlt_0_we,
  d2l_node_reg_ndlt_0_re,
  d2l_node_reg_ndlt_1_w,
  d2l_node_reg_ndlt_1_we,
  d2l_node_reg_ndlt_1_re,
  d2l_node_reg_ndlt_2_w,
  d2l_node_reg_ndlt_2_we,
  d2l_node_reg_ndlt_2_re,
  d2l_node_reg_ndlt_3_w,
  d2l_node_reg_ndlt_3_we,
  d2l_node_reg_ndlt_3_re,
  d2l_node_reg_ndlt_4_w,
  d2l_node_reg_ndlt_4_we,
  d2l_node_reg_ndlt_4_re,
  d2l_node_reg_ndlt_5_w,
  d2l_node_reg_ndlt_5_we,
  d2l_node_reg_ndlt_5_re,
  d2l_node_reg_ndlt_6_w,
  d2l_node_reg_ndlt_6_we,
  d2l_node_reg_ndlt_6_re,
  d2l_node_reg_ndlt_7_w,
  d2l_node_reg_ndlt_7_we,
  d2l_node_reg_ndlt_7_re,
  d2l_node_reg_me_reg_w,
  d2l_node_reg_me_reg_we,
  d2l_node_reg_me_reg_re,
  d2l_node_reg_ncr_reg_w,
  d2l_node_reg_ncr_reg_we,
  d2l_node_reg_ncr_reg_re,
  d2l_node_reg_cal_fail_w,
  d2l_node_reg_cal_fail_we,
  d2l_node_reg_cal_fail_re,
  d2l_node_reg_bar0_w,
  d2l_node_reg_bar0_we,
  d2l_node_reg_bar0_re,
  d2l_node_reg_bar2_w,
  d2l_node_reg_bar2_we,
  d2l_node_reg_bar2_re );

  //------- inputs
  input    clk;
  input    reset;
  input     [63:0] leaf_dec_wr_data;
  input     [15:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;
  input     [63:0] l2d_node_reg_type_node_r;
  input     [63:0] l2d_node_reg_num_nodes_r;
  input     [63:0] l2d_node_reg_msp_size_r;
  input     [63:0] l2d_node_reg_clst_msp_r;
  input     [63:0] l2d_node_reg_cores_cluster_r;
  input     [63:0] l2d_node_reg_avl_mon_r;
  input     [31:0] l2d_node_reg_dbg_mon_r;
  input     [63:0] l2d_node_reg_rt_ctr_r;
  input     [31:0] l2d_node_reg_ign_pa_r;
  input     [31:0] l2d_node_reg_dis_ls_r;
  input     [63:0] l2d_node_reg_cdt1_r;
  input     [63:0] l2d_node_reg_cdt2_r;
  input     [31:0] l2d_node_reg_hilo_r;
  input     [63:0] l2d_node_reg_rst_r;
  input     [63:0] l2d_node_reg_amm_0_r;
  input     [63:0] l2d_node_reg_amm_1_r;
  input     [63:0] l2d_node_reg_amm_2_r;
  input     [63:0] l2d_node_reg_amm_3_r;
  input     [63:0] l2d_node_reg_amm_4_r;
  input     [63:0] l2d_node_reg_amm_5_r;
  input     [63:0] l2d_node_reg_amm_6_r;
  input     [63:0] l2d_node_reg_amm_7_r;
  input     [63:0] l2d_node_reg_avs_sc_r;
  input     [63:0] l2d_node_reg_ndlt_0_r;
  input     [63:0] l2d_node_reg_ndlt_1_r;
  input     [63:0] l2d_node_reg_ndlt_2_r;
  input     [63:0] l2d_node_reg_ndlt_3_r;
  input     [63:0] l2d_node_reg_ndlt_4_r;
  input     [63:0] l2d_node_reg_ndlt_5_r;
  input     [63:0] l2d_node_reg_ndlt_6_r;
  input     [63:0] l2d_node_reg_ndlt_7_r;
  input     [63:0] l2d_node_reg_me_reg_r;
  input     [63:0] l2d_node_reg_ncr_reg_r;
  input     [63:0] l2d_node_reg_cal_fail_r;
  input     [63:0] l2d_node_reg_bar0_r;
  input     [63:0] l2d_node_reg_bar2_r;

  //------- outputs
  output     [63:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;
  output     [63:0] d2l_node_reg_type_node_w;
  output    d2l_node_reg_type_node_we;
  output    d2l_node_reg_type_node_re;
  output     [63:0] d2l_node_reg_num_nodes_w;
  output    d2l_node_reg_num_nodes_we;
  output    d2l_node_reg_num_nodes_re;
  output     [63:0] d2l_node_reg_msp_size_w;
  output    d2l_node_reg_msp_size_we;
  output    d2l_node_reg_msp_size_re;
  output     [63:0] d2l_node_reg_clst_msp_w;
  output    d2l_node_reg_clst_msp_we;
  output    d2l_node_reg_clst_msp_re;
  output     [63:0] d2l_node_reg_cores_cluster_w;
  output    d2l_node_reg_cores_cluster_we;
  output    d2l_node_reg_cores_cluster_re;
  output     [63:0] d2l_node_reg_avl_mon_w;
  output    d2l_node_reg_avl_mon_we;
  output    d2l_node_reg_avl_mon_re;
  output     [31:0] d2l_node_reg_dbg_mon_w;
  output    d2l_node_reg_dbg_mon_we;
  output    d2l_node_reg_dbg_mon_re;
  output     [63:0] d2l_node_reg_rt_ctr_w;
  output    d2l_node_reg_rt_ctr_we;
  output    d2l_node_reg_rt_ctr_re;
  output     [31:0] d2l_node_reg_ign_pa_w;
  output    d2l_node_reg_ign_pa_we;
  output    d2l_node_reg_ign_pa_re;
  output     [31:0] d2l_node_reg_dis_ls_w;
  output    d2l_node_reg_dis_ls_we;
  output    d2l_node_reg_dis_ls_re;
  output     [63:0] d2l_node_reg_cdt1_w;
  output    d2l_node_reg_cdt1_we;
  output    d2l_node_reg_cdt1_re;
  output     [63:0] d2l_node_reg_cdt2_w;
  output    d2l_node_reg_cdt2_we;
  output    d2l_node_reg_cdt2_re;
  output     [31:0] d2l_node_reg_hilo_w;
  output    d2l_node_reg_hilo_we;
  output    d2l_node_reg_hilo_re;
  output     [63:0] d2l_node_reg_rst_w;
  output    d2l_node_reg_rst_we;
  output    d2l_node_reg_rst_re;
  output     [63:0] d2l_node_reg_amm_0_w;
  output    d2l_node_reg_amm_0_we;
  output    d2l_node_reg_amm_0_re;
  output     [63:0] d2l_node_reg_amm_1_w;
  output    d2l_node_reg_amm_1_we;
  output    d2l_node_reg_amm_1_re;
  output     [63:0] d2l_node_reg_amm_2_w;
  output    d2l_node_reg_amm_2_we;
  output    d2l_node_reg_amm_2_re;
  output     [63:0] d2l_node_reg_amm_3_w;
  output    d2l_node_reg_amm_3_we;
  output    d2l_node_reg_amm_3_re;
  output     [63:0] d2l_node_reg_amm_4_w;
  output    d2l_node_reg_amm_4_we;
  output    d2l_node_reg_amm_4_re;
  output     [63:0] d2l_node_reg_amm_5_w;
  output    d2l_node_reg_amm_5_we;
  output    d2l_node_reg_amm_5_re;
  output     [63:0] d2l_node_reg_amm_6_w;
  output    d2l_node_reg_amm_6_we;
  output    d2l_node_reg_amm_6_re;
  output     [63:0] d2l_node_reg_amm_7_w;
  output    d2l_node_reg_amm_7_we;
  output    d2l_node_reg_amm_7_re;
  output     [63:0] d2l_node_reg_avs_sc_w;
  output    d2l_node_reg_avs_sc_we;
  output    d2l_node_reg_avs_sc_re;
  output     [63:0] d2l_node_reg_ndlt_0_w;
  output    d2l_node_reg_ndlt_0_we;
  output    d2l_node_reg_ndlt_0_re;
  output     [63:0] d2l_node_reg_ndlt_1_w;
  output    d2l_node_reg_ndlt_1_we;
  output    d2l_node_reg_ndlt_1_re;
  output     [63:0] d2l_node_reg_ndlt_2_w;
  output    d2l_node_reg_ndlt_2_we;
  output    d2l_node_reg_ndlt_2_re;
  output     [63:0] d2l_node_reg_ndlt_3_w;
  output    d2l_node_reg_ndlt_3_we;
  output    d2l_node_reg_ndlt_3_re;
  output     [63:0] d2l_node_reg_ndlt_4_w;
  output    d2l_node_reg_ndlt_4_we;
  output    d2l_node_reg_ndlt_4_re;
  output     [63:0] d2l_node_reg_ndlt_5_w;
  output    d2l_node_reg_ndlt_5_we;
  output    d2l_node_reg_ndlt_5_re;
  output     [63:0] d2l_node_reg_ndlt_6_w;
  output    d2l_node_reg_ndlt_6_we;
  output    d2l_node_reg_ndlt_6_re;
  output     [63:0] d2l_node_reg_ndlt_7_w;
  output    d2l_node_reg_ndlt_7_we;
  output    d2l_node_reg_ndlt_7_re;
  output     [63:0] d2l_node_reg_me_reg_w;
  output    d2l_node_reg_me_reg_we;
  output    d2l_node_reg_me_reg_re;
  output     [63:0] d2l_node_reg_ncr_reg_w;
  output    d2l_node_reg_ncr_reg_we;
  output    d2l_node_reg_ncr_reg_re;
  output     [63:0] d2l_node_reg_cal_fail_w;
  output    d2l_node_reg_cal_fail_we;
  output    d2l_node_reg_cal_fail_re;
  output     [63:0] d2l_node_reg_bar0_w;
  output    d2l_node_reg_bar0_we;
  output    d2l_node_reg_bar0_re;
  output     [63:0] d2l_node_reg_bar2_w;
  output    d2l_node_reg_bar2_we;
  output    d2l_node_reg_bar2_re;


  //------- wire defines
  logic   [63:0] pio_dec_write_data;
  logic   [21:2] pio_dec_address;
  logic  pio_dec_read;
  logic  pio_dec_write;
  logic   [15:0] block_sel_addr;
  logic  block_sel;
  logic  leaf_dec_valid_active;
  logic  leaf_dec_wr_dvld_active;
  logic  pio_dec_trans_size;
  logic  dec_leaf_retry_atomic_next;
  
  //------- reg defines
  logic   [63:0] d2l_node_reg_type_node_w;
  logic  d2l_node_reg_type_node_we;
  logic  d2l_node_reg_type_node_re;
  logic   [63:0] d2l_node_reg_num_nodes_w;
  logic  d2l_node_reg_num_nodes_we;
  logic  d2l_node_reg_num_nodes_re;
  logic   [63:0] d2l_node_reg_msp_size_w;
  logic  d2l_node_reg_msp_size_we;
  logic  d2l_node_reg_msp_size_re;
  logic   [63:0] d2l_node_reg_clst_msp_w;
  logic  d2l_node_reg_clst_msp_we;
  logic  d2l_node_reg_clst_msp_re;
  logic   [63:0] d2l_node_reg_cores_cluster_w;
  logic  d2l_node_reg_cores_cluster_we;
  logic  d2l_node_reg_cores_cluster_re;
  logic   [63:0] d2l_node_reg_avl_mon_w;
  logic  d2l_node_reg_avl_mon_we;
  logic  d2l_node_reg_avl_mon_re;
  logic   [31:0] d2l_node_reg_dbg_mon_w;
  logic  d2l_node_reg_dbg_mon_we;
  logic  d2l_node_reg_dbg_mon_re;
  logic   [63:0] d2l_node_reg_rt_ctr_w;
  logic  d2l_node_reg_rt_ctr_we;
  logic  d2l_node_reg_rt_ctr_re;
  logic   [31:0] d2l_node_reg_ign_pa_w;
  logic  d2l_node_reg_ign_pa_we;
  logic  d2l_node_reg_ign_pa_re;
  logic   [31:0] d2l_node_reg_dis_ls_w;
  logic  d2l_node_reg_dis_ls_we;
  logic  d2l_node_reg_dis_ls_re;
  logic   [63:0] d2l_node_reg_cdt1_w;
  logic  d2l_node_reg_cdt1_we;
  logic  d2l_node_reg_cdt1_re;
  logic   [63:0] d2l_node_reg_cdt2_w;
  logic  d2l_node_reg_cdt2_we;
  logic  d2l_node_reg_cdt2_re;
  logic   [31:0] d2l_node_reg_hilo_w;
  logic  d2l_node_reg_hilo_we;
  logic  d2l_node_reg_hilo_re;
  logic   [63:0] d2l_node_reg_rst_w;
  logic  d2l_node_reg_rst_we;
  logic  d2l_node_reg_rst_re;
  logic   [63:0] d2l_node_reg_amm_0_w;
  logic  d2l_node_reg_amm_0_we;
  logic  d2l_node_reg_amm_0_re;
  logic   [63:0] d2l_node_reg_amm_1_w;
  logic  d2l_node_reg_amm_1_we;
  logic  d2l_node_reg_amm_1_re;
  logic   [63:0] d2l_node_reg_amm_2_w;
  logic  d2l_node_reg_amm_2_we;
  logic  d2l_node_reg_amm_2_re;
  logic   [63:0] d2l_node_reg_amm_3_w;
  logic  d2l_node_reg_amm_3_we;
  logic  d2l_node_reg_amm_3_re;
  logic   [63:0] d2l_node_reg_amm_4_w;
  logic  d2l_node_reg_amm_4_we;
  logic  d2l_node_reg_amm_4_re;
  logic   [63:0] d2l_node_reg_amm_5_w;
  logic  d2l_node_reg_amm_5_we;
  logic  d2l_node_reg_amm_5_re;
  logic   [63:0] d2l_node_reg_amm_6_w;
  logic  d2l_node_reg_amm_6_we;
  logic  d2l_node_reg_amm_6_re;
  logic   [63:0] d2l_node_reg_amm_7_w;
  logic  d2l_node_reg_amm_7_we;
  logic  d2l_node_reg_amm_7_re;
  logic   [63:0] d2l_node_reg_avs_sc_w;
  logic  d2l_node_reg_avs_sc_we;
  logic  d2l_node_reg_avs_sc_re;
  logic   [63:0] d2l_node_reg_ndlt_0_w;
  logic  d2l_node_reg_ndlt_0_we;
  logic  d2l_node_reg_ndlt_0_re;
  logic   [63:0] d2l_node_reg_ndlt_1_w;
  logic  d2l_node_reg_ndlt_1_we;
  logic  d2l_node_reg_ndlt_1_re;
  logic   [63:0] d2l_node_reg_ndlt_2_w;
  logic  d2l_node_reg_ndlt_2_we;
  logic  d2l_node_reg_ndlt_2_re;
  logic   [63:0] d2l_node_reg_ndlt_3_w;
  logic  d2l_node_reg_ndlt_3_we;
  logic  d2l_node_reg_ndlt_3_re;
  logic   [63:0] d2l_node_reg_ndlt_4_w;
  logic  d2l_node_reg_ndlt_4_we;
  logic  d2l_node_reg_ndlt_4_re;
  logic   [63:0] d2l_node_reg_ndlt_5_w;
  logic  d2l_node_reg_ndlt_5_we;
  logic  d2l_node_reg_ndlt_5_re;
  logic   [63:0] d2l_node_reg_ndlt_6_w;
  logic  d2l_node_reg_ndlt_6_we;
  logic  d2l_node_reg_ndlt_6_re;
  logic   [63:0] d2l_node_reg_ndlt_7_w;
  logic  d2l_node_reg_ndlt_7_we;
  logic  d2l_node_reg_ndlt_7_re;
  logic   [63:0] d2l_node_reg_me_reg_w;
  logic  d2l_node_reg_me_reg_we;
  logic  d2l_node_reg_me_reg_re;
  logic   [63:0] d2l_node_reg_ncr_reg_w;
  logic  d2l_node_reg_ncr_reg_we;
  logic  d2l_node_reg_ncr_reg_re;
  logic   [63:0] d2l_node_reg_cal_fail_w;
  logic  d2l_node_reg_cal_fail_we;
  logic  d2l_node_reg_cal_fail_re;
  logic   [63:0] d2l_node_reg_bar0_w;
  logic  d2l_node_reg_bar0_we;
  logic  d2l_node_reg_bar0_re;
  logic   [63:0] d2l_node_reg_bar2_w;
  logic  d2l_node_reg_bar2_we;
  logic  d2l_node_reg_bar2_re;
  logic  leaf_dec_valid_hld1;
  logic  leaf_dec_valid_hld1_next;
  logic  leaf_dec_wr_dvld_hld1;
  logic  leaf_dec_wr_dvld_hld1_next;
  logic  dec_leaf_retry_atomic;
  logic  pio_write_active;
  logic  pio_read_active;
  logic   [21:2] pio_dec_address_d1;
  logic   [63:0] pio_dec_write_data_d1;
  logic  pio_dec_trans_size_d1;
  logic  dec_pio_trans_size;
  logic  reg_width;
  logic   [63:0] dec_pio_read_data;
  logic   [63:0] dec_pio_read_data_d1;
  logic  dec_pio_ack;
  logic  dec_pio_nack;
  logic  dec_pio_ack_next;
  logic  dec_pio_nack_next;
  logic  pio_internal_ack;
  logic  pio_internal_nack;
  logic  pio_external_ack;
  logic  pio_external_nack;
  logic  pio_external_ack_next;
  logic  pio_external_nack_next;
  logic  pio_no_acks;
  logic  pio_activate_write;
  logic  pio_activate_read;
  logic   [63:0] dec_pio_read_data_next;
  logic  external_transaction_active;
  
  
  //------- assigns
  assign  pio_dec_write_data = leaf_dec_wr_data;
  assign  dec_leaf_rd_data = dec_pio_read_data;
  assign  dec_leaf_ack = dec_pio_ack;
  assign  dec_leaf_nack = dec_pio_nack;
  assign  pio_dec_address = leaf_dec_addr [21:2] ;
  assign  block_sel_addr = 16'h0;
  assign  block_sel = leaf_dec_block_sel;
  assign  leaf_dec_wr_dvld_active = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
  assign  leaf_dec_valid_active = leaf_dec_valid | leaf_dec_valid_hld1;
  assign  dec_leaf_accept = leaf_dec_valid & block_sel;
  assign  dec_leaf_reject = leaf_dec_valid & ~block_sel;
  assign  pio_dec_read = block_sel & leaf_dec_valid_active & (leaf_dec_cycle == 2'b10);
  assign  pio_dec_write = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle[1] == 1'b0);
  assign  pio_dec_trans_size = leaf_dec_wr_width [0] ;
  assign  dec_leaf_data_width [2:1]  = 0;
  assign  dec_leaf_data_width [0]  = dec_pio_trans_size;
  assign  dec_leaf_retry_atomic_next = block_sel & leaf_dec_wr_dvld_active & (leaf_dec_cycle == 2'b00) & (leaf_dec_wr_width [0]  < reg_width);
  
  //------- combinatorial assigns for pio read data
  always_comb begin
    dec_pio_read_data = dec_pio_read_data_d1;
  end
  
  //------- reg assigns for pio read data
  always_ff @ (posedge clk) begin
    if (reset) begin
      dec_pio_read_data_d1 <= #1  64'b0;
    end
    else begin
      dec_pio_read_data_d1 <= #1 dec_pio_read_data_next;
    end
  end
  
  //------- reg assigns for pio i/f
  always_ff @ (posedge clk) begin
    if (reset) begin
      pio_write_active <= #1  1'b0;
      pio_read_active <= #1  1'b0;
      dec_pio_trans_size <= #1 1'b0;
    end
    else begin
      pio_write_active <= #1  pio_write_active ? pio_no_acks : pio_activate_write;
      pio_read_active <= #1  pio_read_active ? pio_no_acks : pio_activate_read;
      pio_dec_address_d1 <= #1   pio_dec_address;
      pio_dec_write_data_d1 <= #1  pio_dec_write_data;
      pio_dec_trans_size_d1 <= #1  pio_dec_trans_size;
      dec_pio_trans_size <= #1 reg_width;
    end
  end
  
  //------- combinatorial assigns for leaf i/f
  always_comb begin
    leaf_dec_valid_hld1_next = leaf_dec_valid | leaf_dec_valid_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next) leaf_dec_valid_hld1_next = 1'b0;
    leaf_dec_wr_dvld_hld1_next = leaf_dec_wr_dvld | leaf_dec_wr_dvld_hld1;
    if (dec_pio_ack_next | dec_pio_nack_next | leaf_dec_valid) leaf_dec_wr_dvld_hld1_next = 1'b0;
  end
  
  //------- reg assigns for leaf i/f
  always_ff @ (posedge clk) begin
    if (reset) begin
      leaf_dec_valid_hld1 <= #1  1'b0;
      leaf_dec_wr_dvld_hld1 <= #1  1'b0;
      dec_leaf_retry_atomic <= #1  1'b0;
    end
    else begin
      leaf_dec_valid_hld1 <= #1 leaf_dec_valid_hld1_next;
      leaf_dec_wr_dvld_hld1 <= #1 leaf_dec_wr_dvld_hld1_next;
      dec_leaf_retry_atomic <= #1 dec_leaf_retry_atomic_next;
    end
  end
  
  //------- combinatorial assigns for pio ack/nack
  always_comb begin
    pio_internal_nack = (pio_read_active | pio_write_active) & ~pio_internal_ack & ~external_transaction_active;
    dec_pio_ack_next = (pio_internal_ack | (pio_external_ack_next & external_transaction_active));
    dec_pio_nack_next = (pio_internal_nack | (pio_external_nack_next & external_transaction_active));
    pio_no_acks = ~(dec_pio_ack | dec_pio_nack | pio_external_ack | pio_external_nack);
    pio_activate_write = (pio_dec_write & ~(dec_pio_ack | dec_pio_nack));
    pio_activate_read = (pio_dec_read & ~(dec_pio_ack | dec_pio_nack));
  end
  
  //------- reg assigns for pio ack/nack
  always_ff @ (posedge clk) begin
    if (reset) begin
      dec_pio_ack <= #1 1'b0;
      dec_pio_nack <= #1 1'b0;
      pio_external_ack <= #1  1'b0;
      pio_external_nack <= #1  1'b0;
    end
    else begin
      dec_pio_ack <= #1 dec_pio_ack ? 1'b0 : dec_pio_ack_next;
      dec_pio_nack <= #1 dec_pio_nack ? 1'b0 : dec_pio_nack_next;
      pio_external_ack <= #1 pio_external_ack_next;
      pio_external_nack <= #1 pio_external_nack_next;
    end
  end
  
  
  //------- address decode
  always_comb begin
    pio_internal_ack = 1'b0;
    external_transaction_active = 1'b0;
    pio_external_ack_next = 1'b0;
    pio_external_nack_next = 1'b0;
    dec_pio_read_data_next = 64'b0;
    reg_width = 1'd0;
    
    d2l_node_reg_type_node_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_type_node_we = 1'b0;
    d2l_node_reg_type_node_re = 1'b0;
    d2l_node_reg_num_nodes_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_num_nodes_we = 1'b0;
    d2l_node_reg_num_nodes_re = 1'b0;
    d2l_node_reg_msp_size_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_msp_size_we = 1'b0;
    d2l_node_reg_msp_size_re = 1'b0;
    d2l_node_reg_clst_msp_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_clst_msp_we = 1'b0;
    d2l_node_reg_clst_msp_re = 1'b0;
    d2l_node_reg_cores_cluster_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_cores_cluster_we = 1'b0;
    d2l_node_reg_cores_cluster_re = 1'b0;
    d2l_node_reg_avl_mon_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_avl_mon_we = 1'b0;
    d2l_node_reg_avl_mon_re = 1'b0;
    d2l_node_reg_dbg_mon_w = pio_dec_write_data_d1  [31:0] ;
    d2l_node_reg_dbg_mon_we = 1'b0;
    d2l_node_reg_dbg_mon_re = 1'b0;
    d2l_node_reg_rt_ctr_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_rt_ctr_we = 1'b0;
    d2l_node_reg_rt_ctr_re = 1'b0;
    d2l_node_reg_ign_pa_w = pio_dec_write_data_d1  [31:0] ;
    d2l_node_reg_ign_pa_we = 1'b0;
    d2l_node_reg_ign_pa_re = 1'b0;
    d2l_node_reg_dis_ls_w = pio_dec_write_data_d1  [31:0] ;
    d2l_node_reg_dis_ls_we = 1'b0;
    d2l_node_reg_dis_ls_re = 1'b0;
    d2l_node_reg_cdt1_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_cdt1_we = 1'b0;
    d2l_node_reg_cdt1_re = 1'b0;
    d2l_node_reg_cdt2_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_cdt2_we = 1'b0;
    d2l_node_reg_cdt2_re = 1'b0;
    d2l_node_reg_hilo_w = pio_dec_write_data_d1  [31:0] ;
    d2l_node_reg_hilo_we = 1'b0;
    d2l_node_reg_hilo_re = 1'b0;
    d2l_node_reg_rst_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_rst_we = 1'b0;
    d2l_node_reg_rst_re = 1'b0;
    d2l_node_reg_amm_0_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_0_we = 1'b0;
    d2l_node_reg_amm_0_re = 1'b0;
    d2l_node_reg_amm_1_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_1_we = 1'b0;
    d2l_node_reg_amm_1_re = 1'b0;
    d2l_node_reg_amm_2_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_2_we = 1'b0;
    d2l_node_reg_amm_2_re = 1'b0;
    d2l_node_reg_amm_3_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_3_we = 1'b0;
    d2l_node_reg_amm_3_re = 1'b0;
    d2l_node_reg_amm_4_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_4_we = 1'b0;
    d2l_node_reg_amm_4_re = 1'b0;
    d2l_node_reg_amm_5_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_5_we = 1'b0;
    d2l_node_reg_amm_5_re = 1'b0;
    d2l_node_reg_amm_6_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_6_we = 1'b0;
    d2l_node_reg_amm_6_re = 1'b0;
    d2l_node_reg_amm_7_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_amm_7_we = 1'b0;
    d2l_node_reg_amm_7_re = 1'b0;
    d2l_node_reg_avs_sc_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_avs_sc_we = 1'b0;
    d2l_node_reg_avs_sc_re = 1'b0;
    d2l_node_reg_ndlt_0_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_0_we = 1'b0;
    d2l_node_reg_ndlt_0_re = 1'b0;
    d2l_node_reg_ndlt_1_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_1_we = 1'b0;
    d2l_node_reg_ndlt_1_re = 1'b0;
    d2l_node_reg_ndlt_2_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_2_we = 1'b0;
    d2l_node_reg_ndlt_2_re = 1'b0;
    d2l_node_reg_ndlt_3_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_3_we = 1'b0;
    d2l_node_reg_ndlt_3_re = 1'b0;
    d2l_node_reg_ndlt_4_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_4_we = 1'b0;
    d2l_node_reg_ndlt_4_re = 1'b0;
    d2l_node_reg_ndlt_5_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_5_we = 1'b0;
    d2l_node_reg_ndlt_5_re = 1'b0;
    d2l_node_reg_ndlt_6_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_6_we = 1'b0;
    d2l_node_reg_ndlt_6_re = 1'b0;
    d2l_node_reg_ndlt_7_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ndlt_7_we = 1'b0;
    d2l_node_reg_ndlt_7_re = 1'b0;
    d2l_node_reg_me_reg_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_me_reg_we = 1'b0;
    d2l_node_reg_me_reg_re = 1'b0;
    d2l_node_reg_ncr_reg_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_ncr_reg_we = 1'b0;
    d2l_node_reg_ncr_reg_re = 1'b0;
    d2l_node_reg_cal_fail_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_cal_fail_we = 1'b0;
    d2l_node_reg_cal_fail_re = 1'b0;
    d2l_node_reg_bar0_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_bar0_we = 1'b0;
    d2l_node_reg_bar0_re = 1'b0;
    d2l_node_reg_bar2_w = pio_dec_write_data_d1  [63:0] ;
    d2l_node_reg_bar2_we = 1'b0;
    d2l_node_reg_bar2_re = 1'b0;
    
    casez(pio_dec_address_d1)
    //  Register: node.reg_type_node     Address: 0x200000     External: false
    20'b1000000000000000000?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_type_node_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_type_node_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_type_node_r;
      end
    //  Register: node.reg_num_nodes     Address: 0x200008     External: false
    20'b1000000000000000001?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_num_nodes_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_num_nodes_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_num_nodes_r;
      end
    //  Register: node.reg_msp_size     Address: 0x200010     External: false
    20'b1000000000000000010?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_msp_size_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_msp_size_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_msp_size_r;
      end
    //  Register: node.reg_clst_msp     Address: 0x200018     External: false
    20'b1000000000000000011?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_clst_msp_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_clst_msp_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_clst_msp_r;
      end
    //  Register: node.reg_cores_cluster     Address: 0x200020     External: false
    20'b1000000000000000100?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_cores_cluster_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_cores_cluster_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_cores_cluster_r;
      end
    //  Register: node.reg_avl_mon     Address: 0x200028     External: false
    20'b1000000000000000101?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_avl_mon_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_avl_mon_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_avl_mon_r;
      end
    //  Register: node.reg_dbg_mon     Address: 0x200030     External: false
    20'b10000000000000001100:
      begin
        d2l_node_reg_dbg_mon_we = pio_write_active & ~dec_pio_ack;
        d2l_node_reg_dbg_mon_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [31:0]  = l2d_node_reg_dbg_mon_r;
      end
    //  Register: node.reg_rt_ctr     Address: 0x200038     External: false
    20'b1000000000000000111?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_rt_ctr_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_rt_ctr_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_rt_ctr_r;
      end
    //  Register: node.reg_ign_pa     Address: 0x200040     External: false
    20'b10000000000000010000:
      begin
        d2l_node_reg_ign_pa_we = pio_write_active & ~dec_pio_ack;
        d2l_node_reg_ign_pa_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_node_reg_ign_pa_r;
      end
    //  Register: node.reg_dis_ls     Address: 0x200044     External: false
    20'b10000000000000010001:
      begin
        d2l_node_reg_dis_ls_we = pio_write_active & ~dec_pio_ack;
        d2l_node_reg_dis_ls_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_node_reg_dis_ls_r;
      end
    //  Register: node.reg_cdt1     Address: 0x200048     External: false
    20'b1000000000000001001?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_cdt1_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_cdt1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_cdt1_r;
      end
    //  Register: node.reg_cdt2     Address: 0x200050     External: false
    20'b1000000000000001010?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_cdt2_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_cdt2_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_cdt2_r;
      end
    //  Register: node.reg_hilo     Address: 0x200058     External: false
    20'b10000000000000010110:
      begin
        d2l_node_reg_hilo_we = pio_write_active & ~dec_pio_ack;
        d2l_node_reg_hilo_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [31:0]  = l2d_node_reg_hilo_r;
      end
    //  Register: node.reg_rst     Address: 0x200060     External: false
    20'b1000000000000001100?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_rst_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_rst_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active | pio_write_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_rst_r;
      end
    //  Register: node.reg_amm_0     Address: 0x200068     External: false
    20'b1000000000000001101?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_0_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_0_r;
      end
    //  Register: node.reg_amm_1     Address: 0x200070     External: false
    20'b1000000000000001110?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_1_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_1_r;
      end
    //  Register: node.reg_amm_2     Address: 0x200078     External: false
    20'b1000000000000001111?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_2_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_2_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_2_r;
      end
    //  Register: node.reg_amm_3     Address: 0x200080     External: false
    20'b1000000000000010000?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_3_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_3_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_3_r;
      end
    //  Register: node.reg_amm_4     Address: 0x200088     External: false
    20'b1000000000000010001?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_4_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_4_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_4_r;
      end
    //  Register: node.reg_amm_5     Address: 0x200090     External: false
    20'b1000000000000010010?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_5_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_5_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_5_r;
      end
    //  Register: node.reg_amm_6     Address: 0x200098     External: false
    20'b1000000000000010011?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_6_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_6_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_6_r;
      end
    //  Register: node.reg_amm_7     Address: 0x2000a0     External: false
    20'b1000000000000010100?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_amm_7_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_amm_7_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_amm_7_r;
      end
    //  Register: node.reg_avs_sc     Address: 0x2000a8     External: false
    20'b1000000000000010101?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_avs_sc_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_avs_sc_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_avs_sc_r;
      end
    //  Register: node.reg_ndlt_0     Address: 0x2000b0     External: false
    20'b1000000000000010110?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_0_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_0_r;
      end
    //  Register: node.reg_ndlt_1     Address: 0x2000b8     External: false
    20'b1000000000000010111?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_1_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_1_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_1_r;
      end
    //  Register: node.reg_ndlt_2     Address: 0x2000c0     External: false
    20'b1000000000000011000?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_2_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_2_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_2_r;
      end
    //  Register: node.reg_ndlt_3     Address: 0x2000c8     External: false
    20'b1000000000000011001?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_3_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_3_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_3_r;
      end
    //  Register: node.reg_ndlt_4     Address: 0x2000d0     External: false
    20'b1000000000000011010?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_4_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_4_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_4_r;
      end
    //  Register: node.reg_ndlt_5     Address: 0x2000d8     External: false
    20'b1000000000000011011?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_5_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_5_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_5_r;
      end
    //  Register: node.reg_ndlt_6     Address: 0x2000e0     External: false
    20'b1000000000000011100?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_6_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_6_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_6_r;
      end
    //  Register: node.reg_ndlt_7     Address: 0x2000e8     External: false
    20'b1000000000000011101?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ndlt_7_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ndlt_7_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ndlt_7_r;
      end
    //  Register: node.reg_me_reg     Address: 0x2000f0     External: false
    20'b1000000000000011110?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_me_reg_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_me_reg_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_me_reg_r;
      end
    //  Register: node.reg_ncr_reg     Address: 0x2000f8     External: false
    20'b1000000000000011111?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_ncr_reg_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_ncr_reg_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_ncr_reg_r;
      end
    //  Register: node.reg_cal_fail     Address: 0x200100     External: false
    20'b1000000000000100000?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_cal_fail_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_cal_fail_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_cal_fail_r;
      end
    //  Register: node.reg_bar0     Address: 0x200108     External: false
    20'b1000000000000100001?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_bar0_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_bar0_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_bar0_r;
      end
    //  Register: node.reg_bar2     Address: 0x200110     External: false
    20'b1000000000000100010?:
      begin
        reg_width = 1'd1;
        d2l_node_reg_bar2_we = pio_write_active & ~dec_pio_ack & (pio_dec_trans_size_d1 >= reg_width);
        d2l_node_reg_bar2_re = pio_read_active & ~dec_pio_ack;
        pio_internal_ack =  pio_read_active;
        dec_pio_read_data_next  [63:0]  = l2d_node_reg_bar2_r;
      end
    endcase
  end
  
endmodule

//
//---------- module top_pio
//
module top_pio
(
  clk,
  reset,
  h2l_node_reg_clst_msp_num_clusters_w,
  h2l_node_reg_clst_msp_num_msps_w,
  h2l_node_reg_cores_cluster_cores_per_cluster_w,
  h2l_node_reg_dbg_mon_ncr_debug_enabled_w,
  h2l_node_reg_dbg_mon_mfe_debug_enabled_w,
  h2l_node_reg_rt_ctr_real_time_counter_w,
  h2l_node_reg_cdt1_node_credits_w,
  h2l_node_reg_cdt2_node_threads_w,
  h2l_node_reg_amm_0_amm_0_read_rsp_w,
  h2l_node_reg_amm_0_amm_0_read_req_w,
  h2l_node_reg_amm_1_amm_1_read_rsp_w,
  h2l_node_reg_amm_1_amm_1_read_req_w,
  h2l_node_reg_amm_2_amm_2_read_rsp_w,
  h2l_node_reg_amm_2_amm_2_read_req_w,
  h2l_node_reg_amm_3_amm_3_read_rsp_w,
  h2l_node_reg_amm_3_amm_3_read_req_w,
  h2l_node_reg_amm_4_amm_4_read_rsp_w,
  h2l_node_reg_amm_4_amm_4_read_req_w,
  h2l_node_reg_amm_5_amm_5_read_rsp_w,
  h2l_node_reg_amm_5_amm_5_read_req_w,
  h2l_node_reg_amm_6_amm_6_read_rsp_w,
  h2l_node_reg_amm_6_amm_6_read_req_w,
  h2l_node_reg_amm_7_amm_7_read_rsp_w,
  h2l_node_reg_amm_7_amm_7_read_req_w,
  h2l_node_reg_avs_sc_avs_sc_read_rsp_w,
  h2l_node_reg_avs_sc_avs_sc_read_req_w,
  h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w,
  h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w,
  h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w,
  h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w,
  h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w,
  h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w,
  h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w,
  h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w,
  h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w,
  h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w,
  h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w,
  h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w,
  h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w,
  h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w,
  h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w,
  h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w,
  h2l_node_reg_me_reg_avs_me_regif_read_rsp_w,
  h2l_node_reg_me_reg_avs_me_regif_read_req_w,
  h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w,
  h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w,
  h2l_node_reg_cal_fail_all_mem_cal_fail_w,
  h2l_node_reg_cal_fail_all_mem_cal_success_w,
  h2l_node_reg_bar0_max_wait_delay_bar0_w,
  h2l_node_reg_bar2_sc_bar2_write_burst_set_w,
  h2l_node_reg_bar2_sc_bar2_read_burst_set_w,
  h2l_node_reg_bar2_max_wait_delay_bar2_w,
  leaf_dec_wr_data,
  leaf_dec_addr,
  leaf_dec_block_sel,
  leaf_dec_valid,
  leaf_dec_wr_dvld,
  leaf_dec_cycle,
  leaf_dec_wr_width,

  l2h_node_reg_type_node_condor_system_r,
  l2h_node_reg_type_node_absolute_node_number_r,
  l2h_node_reg_num_nodes_log2_num_nodes_r,
  l2h_node_reg_msp_size_msp_size_r,
  l2h_node_reg_avl_mon_avalon_timeout_bar2_r,
  l2h_node_reg_avl_mon_avalon_timeout_bar0_r,
  l2h_node_reg_avl_mon_avalon_monitor_bypass2_r,
  l2h_node_reg_avl_mon_avalon_monitor_bypass0_r,
  l2h_node_reg_avl_mon_enable_pcie_read_r,
  l2h_node_reg_rt_ctr_real_time_counter_r,
  l2h_node_reg_ign_pa_ignore_phy_addr_r,
  l2h_node_reg_dis_ls_disable_local_spawn_r,
  l2h_node_reg_cdt1_overwrite_credits_r,
  l2h_node_reg_cdt1_node_credits_r,
  l2h_node_reg_cdt2_track_migration_r,
  l2h_node_reg_cdt2_enable_credits_r,
  l2h_node_reg_hilo_dsp_hi_r,
  l2h_node_reg_hilo_dsp_lo_r,
  l2h_node_reg_rst_reset_srio_control_r,
  l2h_node_reg_rst_reset_srio_r,
  l2h_node_reg_rst_reset_emif_r,
  l2h_node_reg_rst_reset_me_r,
  l2h_node_reg_rst_reset_msp_r,
  l2h_node_reg_rst_reset_cluster_r,
  dec_leaf_rd_data,
  dec_leaf_ack,
  dec_leaf_nack,
  dec_leaf_accept,
  dec_leaf_reject,
  dec_leaf_retry_atomic,
  dec_leaf_data_width );

  //------- inputs
  input    clk;
  input    reset;
  input     [3:0] h2l_node_reg_clst_msp_num_clusters_w;
  input     [3:0] h2l_node_reg_clst_msp_num_msps_w;
  input     [3:0] h2l_node_reg_cores_cluster_cores_per_cluster_w;
  input    h2l_node_reg_dbg_mon_ncr_debug_enabled_w;
  input    h2l_node_reg_dbg_mon_mfe_debug_enabled_w;
  input     [63:0] h2l_node_reg_rt_ctr_real_time_counter_w;
  input     [15:0] h2l_node_reg_cdt1_node_credits_w;
  input     [15:0] h2l_node_reg_cdt2_node_threads_w;
  input     [31:0] h2l_node_reg_amm_0_amm_0_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_0_amm_0_read_req_w;
  input     [31:0] h2l_node_reg_amm_1_amm_1_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_1_amm_1_read_req_w;
  input     [31:0] h2l_node_reg_amm_2_amm_2_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_2_amm_2_read_req_w;
  input     [31:0] h2l_node_reg_amm_3_amm_3_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_3_amm_3_read_req_w;
  input     [31:0] h2l_node_reg_amm_4_amm_4_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_4_amm_4_read_req_w;
  input     [31:0] h2l_node_reg_amm_5_amm_5_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_5_amm_5_read_req_w;
  input     [31:0] h2l_node_reg_amm_6_amm_6_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_6_amm_6_read_req_w;
  input     [31:0] h2l_node_reg_amm_7_amm_7_read_rsp_w;
  input     [31:0] h2l_node_reg_amm_7_amm_7_read_req_w;
  input     [31:0] h2l_node_reg_avs_sc_avs_sc_read_rsp_w;
  input     [31:0] h2l_node_reg_avs_sc_avs_sc_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_0_avs_ndlt_0_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_0_avs_ndlt_0_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_1_avs_ndlt_1_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_1_avs_ndlt_1_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_2_avs_ndlt_2_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_2_avs_ndlt_2_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_3_avs_ndlt_3_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_3_avs_ndlt_3_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_4_avs_ndlt_4_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_4_avs_ndlt_4_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_5_avs_ndlt_5_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_5_avs_ndlt_5_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_6_avs_ndlt_6_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_6_avs_ndlt_6_read_req_w;
  input     [31:0] h2l_node_reg_ndlt_7_avs_ndlt_7_read_rsp_w;
  input     [31:0] h2l_node_reg_ndlt_7_avs_ndlt_7_read_req_w;
  input     [31:0] h2l_node_reg_me_reg_avs_me_regif_read_rsp_w;
  input     [31:0] h2l_node_reg_me_reg_avs_me_regif_read_req_w;
  input     [31:0] h2l_node_reg_ncr_reg_avs_ncr_regif_read_rsp_w;
  input     [31:0] h2l_node_reg_ncr_reg_avs_ncr_regif_read_req_w;
  input     [7:0] h2l_node_reg_cal_fail_all_mem_cal_fail_w;
  input     [7:0] h2l_node_reg_cal_fail_all_mem_cal_success_w;
  input     [16:0] h2l_node_reg_bar0_max_wait_delay_bar0_w;
  input     [5:0] h2l_node_reg_bar2_sc_bar2_write_burst_set_w;
  input     [5:0] h2l_node_reg_bar2_sc_bar2_read_burst_set_w;
  input     [16:0] h2l_node_reg_bar2_max_wait_delay_bar2_w;
  input     [63:0] leaf_dec_wr_data;
  input     [15:0] leaf_dec_addr;
  input    leaf_dec_block_sel;
  input    leaf_dec_valid;
  input    leaf_dec_wr_dvld;
  input     [1:0] leaf_dec_cycle;
  input     [2:0] leaf_dec_wr_width;

  //------- outputs
  output    l2h_node_reg_type_node_condor_system_r;
  output     [15:0] l2h_node_reg_type_node_absolute_node_number_r;
  output     [4:0] l2h_node_reg_num_nodes_log2_num_nodes_r;
  output     [1:0] l2h_node_reg_msp_size_msp_size_r;
  output     [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar2_r;
  output     [15:0] l2h_node_reg_avl_mon_avalon_timeout_bar0_r;
  output    l2h_node_reg_avl_mon_avalon_monitor_bypass2_r;
  output    l2h_node_reg_avl_mon_avalon_monitor_bypass0_r;
  output    l2h_node_reg_avl_mon_enable_pcie_read_r;
  output     [63:0] l2h_node_reg_rt_ctr_real_time_counter_r;
  output    l2h_node_reg_ign_pa_ignore_phy_addr_r;
  output    l2h_node_reg_dis_ls_disable_local_spawn_r;
  output    l2h_node_reg_cdt1_overwrite_credits_r;
  output     [15:0] l2h_node_reg_cdt1_node_credits_r;
  output    l2h_node_reg_cdt2_track_migration_r;
  output    l2h_node_reg_cdt2_enable_credits_r;
  output    l2h_node_reg_hilo_dsp_hi_r;
  output    l2h_node_reg_hilo_dsp_lo_r;
  output    l2h_node_reg_rst_reset_srio_control_r;
  output     [5:0] l2h_node_reg_rst_reset_srio_r;
  output     [7:0] l2h_node_reg_rst_reset_emif_r;
  output    l2h_node_reg_rst_reset_me_r;
  output     [3:0] l2h_node_reg_rst_reset_msp_r;
  output     [3:0] l2h_node_reg_rst_reset_cluster_r;
  output     [63:0] dec_leaf_rd_data;
  output    dec_leaf_ack;
  output    dec_leaf_nack;
  output    dec_leaf_accept;
  output    dec_leaf_reject;
  output    dec_leaf_retry_atomic;
  output     [2:0] dec_leaf_data_width;


  //------- wire defines
  logic   [63:0] d2l_node_reg_type_node_w;
  logic  d2l_node_reg_type_node_we;
  logic  d2l_node_reg_type_node_re;
  logic   [63:0] d2l_node_reg_num_nodes_w;
  logic  d2l_node_reg_num_nodes_we;
  logic  d2l_node_reg_num_nodes_re;
  logic   [63:0] d2l_node_reg_msp_size_w;
  logic  d2l_node_reg_msp_size_we;
  logic  d2l_node_reg_msp_size_re;
  logic   [63:0] d2l_node_reg_clst_msp_w;
  logic  d2l_node_reg_clst_msp_we;
  logic  d2l_node_reg_clst_msp_re;
  logic   [63:0] d2l_node_reg_cores_cluster_w;
  logic  d2l_node_reg_cores_cluster_we;
  logic  d2l_node_reg_cores_cluster_re;
  logic   [63:0] d2l_node_reg_avl_mon_w;
  logic  d2l_node_reg_avl_mon_we;
  logic  d2l_node_reg_avl_mon_re;
  logic   [31:0] d2l_node_reg_dbg_mon_w;
  logic  d2l_node_reg_dbg_mon_we;
  logic  d2l_node_reg_dbg_mon_re;
  logic   [63:0] d2l_node_reg_rt_ctr_w;
  logic  d2l_node_reg_rt_ctr_we;
  logic  d2l_node_reg_rt_ctr_re;
  logic   [31:0] d2l_node_reg_ign_pa_w;
  logic  d2l_node_reg_ign_pa_we;
  logic  d2l_node_reg_ign_pa_re;
  logic   [31:0] d2l_node_reg_dis_ls_w;
  logic  d2l_node_reg_dis_ls_we;
  logic  d2l_node_reg_dis_ls_re;
  logic   [63:0] d2l_node_reg_cdt1_w;
  logic  d2l_node_reg_cdt1_we;
  logic  d2l_node_reg_cdt1_re;
  logic   [63:0] d2l_node_reg_cdt2_w;
  logic  d2l_node_reg_cdt2_we;
  logic  d2l_node_reg_cdt2_re;
  logic   [31:0] d2l_node_reg_hilo_w;
  logic  d2l_node_reg_hilo_we;
  logic  d2l_node_reg_hilo_re;
  logic   [63:0] d2l_node_reg_rst_w;
  logic  d2l_node_reg_rst_we;
  logic  d2l_node_reg_rst_re;
  logic   [63:0] d2l_node_reg_amm_0_w;
  logic  d2l_node_reg_amm_0_we;
  logic  d2l_node_reg_amm_0_re;
  logic   [63:0] d2l_node_reg_amm_1_w;
  logic  d2l_node_reg_amm_1_we;
  logic  d2l_node_reg_amm_1_re;
  logic   [63:0] d2l_node_reg_amm_2_w;
  logic  d2l_node_reg_amm_2_we;
  logic  d2l_node_reg_amm_2_re;
  logic   [63:0] d2l_node_reg_amm_3_w;
  logic  d2l_node_reg_amm_3_we;
  logic  d2l_node_reg_amm_3_re;
  logic   [63:0] d2l_node_reg_amm_4_w;
  logic  d2l_node_reg_amm_4_we;
  logic  d2l_node_reg_amm_4_re;
  logic   [63:0] d2l_node_reg_amm_5_w;
  logic  d2l_node_reg_amm_5_we;
  logic  d2l_node_reg_amm_5_re;
  logic   [63:0] d2l_node_reg_amm_6_w;
  logic  d2l_node_reg_amm_6_we;
  logic  d2l_node_reg_amm_6_re;
  logic   [63:0] d2l_node_reg_amm_7_w;
  logic  d2l_node_reg_amm_7_we;
  logic  d2l_node_reg_amm_7_re;
  logic   [63:0] d2l_node_reg_avs_sc_w;
  logic  d2l_node_reg_avs_sc_we;
  logic  d2l_node_reg_avs_sc_re;
  logic   [63:0] d2l_node_reg_ndlt_0_w;
  logic  d2l_node_reg_ndlt_0_we;
  logic  d2l_node_reg_ndlt_0_re;
  logic   [63:0] d2l_node_reg_ndlt_1_w;
  logic  d2l_node_reg_ndlt_1_we;
  logic  d2l_node_reg_ndlt_1_re;
  logic   [63:0] d2l_node_reg_ndlt_2_w;
  logic  d2l_node_reg_ndlt_2_we;
  logic  d2l_node_reg_ndlt_2_re;
  logic   [63:0] d2l_node_reg_ndlt_3_w;
  logic  d2l_node_reg_ndlt_3_we;
  logic  d2l_node_reg_ndlt_3_re;
  logic   [63:0] d2l_node_reg_ndlt_4_w;
  logic  d2l_node_reg_ndlt_4_we;
  logic  d2l_node_reg_ndlt_4_re;
  logic   [63:0] d2l_node_reg_ndlt_5_w;
  logic  d2l_node_reg_ndlt_5_we;
  logic  d2l_node_reg_ndlt_5_re;
  logic   [63:0] d2l_node_reg_ndlt_6_w;
  logic  d2l_node_reg_ndlt_6_we;
  logic  d2l_node_reg_ndlt_6_re;
  logic   [63:0] d2l_node_reg_ndlt_7_w;
  logic  d2l_node_reg_ndlt_7_we;
  logic  d2l_node_reg_ndlt_7_re;
  logic   [63:0] d2l_node_reg_me_reg_w;
  logic  d2l_node_reg_me_reg_we;
  logic  d2l_node_reg_me_reg_re;
  logic   [63:0] d2l_node_reg_ncr_reg_w;
  logic  d2l_node_reg_ncr_reg_we;
  logic  d2l_node_reg_ncr_reg_re;
  logic   [63:0] d2l_node_reg_cal_fail_w;
  logic  d2l_node_reg_cal_fail_we;
  logic  d2l_node_reg_cal_fail_re;
  logic   [63:0] d2l_node_reg_bar0_w;
  logic  d2l_node_reg_bar0_we;
  logic  d2l_node_reg_bar0_re;
  logic   [63:0] d2l_node_reg_bar2_w;
  logic  d2l_node_reg_bar2_we;
  logic  d2l_node_reg_bar2_re;
  logic   [63:0] l2d_node_reg_type_node_r;
  logic   [63:0] l2d_node_reg_num_nodes_r;
  logic   [63:0] l2d_node_reg_msp_size_r;
  logic   [63:0] l2d_node_reg_clst_msp_r;
  logic   [63:0] l2d_node_reg_cores_cluster_r;
  logic   [63:0] l2d_node_reg_avl_mon_r;
  logic   [31:0] l2d_node_reg_dbg_mon_r;
  logic   [63:0] l2d_node_reg_rt_ctr_r;
  logic   [31:0] l2d_node_reg_ign_pa_r;
  logic   [31:0] l2d_node_reg_dis_ls_r;
  logic   [63:0] l2d_node_reg_cdt1_r;
  logic   [63:0] l2d_node_reg_cdt2_r;
  logic   [31:0] l2d_node_reg_hilo_r;
  logic   [63:0] l2d_node_reg_rst_r;
  logic   [63:0] l2d_node_reg_amm_0_r;
  logic   [63:0] l2d_node_reg_amm_1_r;
  logic   [63:0] l2d_node_reg_amm_2_r;
  logic   [63:0] l2d_node_reg_amm_3_r;
  logic   [63:0] l2d_node_reg_amm_4_r;
  logic   [63:0] l2d_node_reg_amm_5_r;
  logic   [63:0] l2d_node_reg_amm_6_r;
  logic   [63:0] l2d_node_reg_amm_7_r;
  logic   [63:0] l2d_node_reg_avs_sc_r;
  logic   [63:0] l2d_node_reg_ndlt_0_r;
  logic   [63:0] l2d_node_reg_ndlt_1_r;
  logic   [63:0] l2d_node_reg_ndlt_2_r;
  logic   [63:0] l2d_node_reg_ndlt_3_r;
  logic   [63:0] l2d_node_reg_ndlt_4_r;
  logic   [63:0] l2d_node_reg_ndlt_5_r;
  logic   [63:0] l2d_node_reg_ndlt_6_r;
  logic   [63:0] l2d_node_reg_ndlt_7_r;
  logic   [63:0] l2d_node_reg_me_reg_r;
  logic   [63:0] l2d_node_reg_ncr_reg_r;
  logic   [63:0] l2d_node_reg_cal_fail_r;
  logic   [63:0] l2d_node_reg_bar0_r;
  logic   [63:0] l2d_node_reg_bar2_r;
  
  
  top_jrdl_decode pio_decode ( .* );
    
  top_jrdl_logic pio_logic ( .* );
    
endmodule

